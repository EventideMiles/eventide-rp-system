@use "../utils/colors";
@use "../utils/mixins";
@use "../utils/typography";

// Enhanced Grid System for Eventide RP System
// Provides modern Grid layout capabilities while maintaining compatibility
// --------------------------------------------------------------

// Enhanced grid container with auto-sizing and gap control
.e-grid {
  display: grid;
  width: 100%;
  
  // Standard gaps
  gap: 1rem;
  
  // Gap variants
  &--gap-xs { gap: 0.25rem; }
  &--gap-sm { gap: 0.5rem; }
  &--gap-md { gap: 1rem; }
  &--gap-lg { gap: 1.5rem; }
  &--gap-xl { gap: 2rem; }
  
  // Row and column gap variants
  &--row-gap-xs { row-gap: 0.25rem; }
  &--row-gap-sm { row-gap: 0.5rem; }
  &--row-gap-md { row-gap: 1rem; }
  &--row-gap-lg { row-gap: 1.5rem; }
  &--row-gap-xl { row-gap: 2rem; }
  
  &--col-gap-xs { column-gap: 0.25rem; }
  &--col-gap-sm { column-gap: 0.5rem; }
  &--col-gap-md { column-gap: 1rem; }
  &--col-gap-lg { column-gap: 1.5rem; }
  &--col-gap-xl { column-gap: 2rem; }
  
  // Preconfigured grid templates with auto-fill/auto-fit
  // These automatically create responsively sized columns
  
  // Auto-fill fills the container with as many columns as possible
  // (might leave empty columns)
  &--auto-fill-xs { grid-template-columns: repeat(auto-fill, minmax(100px, 1fr)); }
  &--auto-fill-sm { grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); }
  &--auto-fill-md { grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); }
  &--auto-fill-lg { grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); }
  &--auto-fill-xl { grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); }
  
  // Auto-fit expands columns to fill the container 
  // (no empty columns, columns stretch)
  &--auto-fit-xs { grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); }
  &--auto-fit-sm { grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); }
  &--auto-fit-md { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); }
  &--auto-fit-lg { grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); }
  &--auto-fit-xl { grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); }
  
  // Fixed column counts (with equal width columns)
  &--cols-1 { grid-template-columns: repeat(1, 1fr); }
  &--cols-2 { grid-template-columns: repeat(2, 1fr); }
  &--cols-3 { grid-template-columns: repeat(3, 1fr); }
  &--cols-4 { grid-template-columns: repeat(4, 1fr); }
  &--cols-5 { grid-template-columns: repeat(5, 1fr); }
  &--cols-6 { grid-template-columns: repeat(6, 1fr); }
  &--cols-7 { grid-template-columns: repeat(7, 1fr); }
  &--cols-8 { grid-template-columns: repeat(8, 1fr); }
  &--cols-9 { grid-template-columns: repeat(9, 1fr); }
  &--cols-10 { grid-template-columns: repeat(10, 1fr); }
  &--cols-11 { grid-template-columns: repeat(11, 1fr); }
  &--cols-12 { grid-template-columns: repeat(12, 1fr); }
  
  // Common column width patterns
  &--sidebar-left { 
    grid-template-columns: minmax(200px, 1fr) minmax(0, 3fr); 
  }
  
  &--sidebar-right { 
    grid-template-columns: minmax(0, 3fr) minmax(200px, 1fr); 
  }
  
  &--three-column { 
    grid-template-columns: minmax(200px, 1fr) minmax(0, 2fr) minmax(200px, 1fr); 
  }
  
  // Alignment utilities
  &--items-start { align-items: start; }
  &--items-center { align-items: center; }
  &--items-end { align-items: end; }
  &--items-stretch { align-items: stretch; }
  
  &--justify-start { justify-items: start; }
  &--justify-center { justify-items: center; }
  &--justify-end { justify-items: end; }
  &--justify-stretch { justify-items: stretch; }
  
  // Grid item - for positioning individual items
  &__item {
    // Span utilities
    &--span-1 { grid-column: span 1; }
    &--span-2 { grid-column: span 2; }
    &--span-3 { grid-column: span 3; }
    &--span-4 { grid-column: span 4; }
    &--span-5 { grid-column: span 5; }
    &--span-6 { grid-column: span 6; }
    &--span-7 { grid-column: span 7; }
    &--span-8 { grid-column: span 8; }
    &--span-9 { grid-column: span 9; }
    &--span-10 { grid-column: span 10; }
    &--span-11 { grid-column: span 11; }
    &--span-12 { grid-column: span 12; }
    
    // Row span utilities
    &--row-span-1 { grid-row: span 1; }
    &--row-span-2 { grid-row: span 2; }
    &--row-span-3 { grid-row: span 3; }
    &--row-span-4 { grid-row: span 4; }
    &--row-span-5 { grid-row: span 5; }
    &--row-span-6 { grid-row: span 6; }
    
    // Start position utilities
    &--start-1 { grid-column-start: 1; }
    &--start-2 { grid-column-start: 2; }
    &--start-3 { grid-column-start: 3; }
    &--start-4 { grid-column-start: 4; }
    &--start-5 { grid-column-start: 5; }
    &--start-6 { grid-column-start: 6; }
    &--start-7 { grid-column-start: 7; }
    &--start-8 { grid-column-start: 8; }
    &--start-9 { grid-column-start: 9; }
    &--start-10 { grid-column-start: 10; }
    &--start-11 { grid-column-start: 11; }
    &--start-12 { grid-column-start: 12; }
    
    // Row start position utilities
    &--row-start-1 { grid-row-start: 1; }
    &--row-start-2 { grid-row-start: 2; }
    &--row-start-3 { grid-row-start: 3; }
    &--row-start-4 { grid-row-start: 4; }
    &--row-start-5 { grid-row-start: 5; }
    &--row-start-6 { grid-row-start: 6; }
    
    // Self alignment utilities
    &--self-start { align-self: start; }
    &--self-center { align-self: center; }
    &--self-end { align-self: end; }
    &--self-stretch { align-self: stretch; }
    
    &--justify-self-start { justify-self: start; }
    &--justify-self-center { justify-self: center; }
    &--justify-self-end { justify-self: end; }
    &--justify-self-stretch { justify-self: stretch; }
    
    // Special positioning
    &--full-width { 
      grid-column: 1 / -1;  // Spans all columns
    }
    
    &--center-item {
      grid-column: 1 / -1;
      justify-self: center;
      max-width: 40rem;
    }
  }
  
  // Grid areas for named template areas
  &--areas {
    grid-template-areas: var(--grid-areas);
    grid-template-rows: var(--grid-rows, auto);
    grid-template-columns: var(--grid-cols);
  }
  
  // Common area layouts
  &--standard-layout {
    grid-template:
      "header header header" auto "sidebar main aside" 1fr "footer footer footer" auto / 200px 1fr 200px;
    
    .e-grid__header { grid-area: header; }
    .e-grid__sidebar { grid-area: sidebar; }
    .e-grid__main { grid-area: main; }
    .e-grid__aside { grid-area: aside; }
    .e-grid__footer { grid-area: footer; }
  }
  
  // Grid with card styling
  &--cards {
    .e-grid__item {
      background-color: var(--eventide-rp-system-c-faint);
      border: 1px solid var(--color-border-dark);
      border-radius: 0.25rem;
      padding: 1rem;
      box-shadow: 0 2px 4px rgb(0 0 0 / 10%);
      transition: all 0.2s ease;
      
      &:hover {
        box-shadow: 0 4px 8px rgb(0 0 0 / 15%);
        transform: translateY(-2px);
        border-color: var(--color-border-highlight);
      }
    }
  }
  
  // Grid with lined sections
  &--lined {
    gap: 0;
    border: 1px solid var(--color-border-dark);
    border-radius: 0.25rem;
    overflow: hidden;
    
    .e-grid__item {
      padding: 1rem;
      border-bottom: 1px solid var(--color-border-dark);
      border-right: 1px solid var(--color-border-dark);
      
      &:nth-child(3n) {
        border-right: none;
      }
      
      &:nth-last-child(-n+3) {
        border-bottom: none;
      }
    }
  }
}

// Media Query Mixins for grid adjustments
@mixin grid-lg {
  @media (width >= 1200px) {
    @content;
  }
}

@mixin grid-md {
  @media (width >= 992px) and (width <= 1199px) {
    @content;
  }
}

@mixin grid-sm {
  @media (width >= 768px) and (width <= 991px) {
    @content;
  }
}

@mixin grid-xs {
  @media (width <= 767px) {
    @content;
  }
}

// Example responsive adjustments using the mixins:

/*
.custom-grid {
  @include grid-lg {
    grid-template-columns: repeat(4, 1fr);
  }
  
  @include grid-md {
    grid-template-columns: repeat(3, 1fr);
  }
  
  @include grid-sm {
    grid-template-columns: repeat(2, 1fr);
  }
  
  @include grid-xs {
    grid-template-columns: 1fr;
  }
}
*/
