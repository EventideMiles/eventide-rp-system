@use "../../utils/themes" as themes;
@use "../../utils/sheet-tokens" as tokens;

// ===================================
// RESOURCE BOXES COMPONENT
// ===================================
// Reusable resource display system with structured upper/lower sections
// Extracted from character sheet and modernized following refactoring guidelines

// ===================================
// CONFIGURATION VARIABLES
// ===================================
// Using sheet-tokens for consistent design system integration

// Resource dimensions and spacing
$resource-height-upper: tokens.$sheet-height-section-upper;
$resource-height-lower: tokens.$sheet-height-section-lower;
$resource-height-third: tokens.$sheet-height-section-third;
$resource-padding-input: tokens.$sheet-padding-input-resource;
$resource-spacing-xs: tokens.$sheet-spacing-xs;
$resource-spacing-sm: tokens.$sheet-spacing-sm;
$resource-spacing-base: tokens.$sheet-spacing-base;

// Typography
$resource-font-size-label-xs: tokens.$sheet-font-size-label-xs;
$resource-font-size-label-sm: tokens.$sheet-font-size-label-sm;
$resource-font-size-label-md: tokens.$sheet-font-size-label-md;
$resource-font-size-label-lg: tokens.$sheet-font-size-label-lg;
$resource-font-size-value-md: tokens.$sheet-font-size-value-md;
$resource-font-size-value-lg: tokens.$sheet-font-size-value-lg;
$resource-font-size-value-xl: tokens.$sheet-font-size-value-xl;
$resource-font-weight-semibold: tokens.$sheet-font-weight-semibold;
$resource-font-weight-bold: tokens.$sheet-font-weight-bold;
$resource-letter-spacing-base: tokens.$sheet-letter-spacing-base;
$resource-letter-spacing-loose: tokens.$sheet-letter-spacing-loose;
$resource-line-height-base: tokens.$sheet-line-height-base;

// Borders and radius
$resource-border-base: tokens.$sheet-border-base;
$resource-border-thin: tokens.$sheet-border-thin;
$resource-radius-xs: tokens.$sheet-radius-xs;
$resource-radius-sm: tokens.$sheet-radius-sm;
$resource-radius-xl: tokens.$sheet-radius-xl;

// Shadows and effects
$resource-shadow-offset-xs: tokens.$sheet-shadow-offset-xs;
$resource-shadow-offset-sm: tokens.$sheet-shadow-offset-sm;
$resource-shadow-offset-md: tokens.$sheet-shadow-offset-md;
$resource-shadow-blur-xs: tokens.$sheet-shadow-blur-xs;
$resource-shadow-blur-sm: tokens.$sheet-shadow-blur-sm;
$resource-shadow-blur-md: tokens.$sheet-shadow-blur-md;
$resource-shadow-blur-xxl: tokens.$sheet-shadow-blur-xxl;
$resource-glow-blur-sm: tokens.$sheet-glow-blur-sm;
$resource-glow-blur-md: tokens.$sheet-glow-blur-md;

// Transitions and animations
$resource-transition-base: tokens.$sheet-transition-base;
$resource-transition-medium: tokens.$sheet-transition-medium;
$resource-transition-slow: tokens.$sheet-transition-slow;

// Layout dimensions
$resource-width-input-min: tokens.$sheet-width-input-min;
$resource-percent-full: tokens.$sheet-percent-full;
$resource-opacity-default: tokens.$sheet-opacity-default;
$resource-opacity-full: tokens.$sheet-opacity-full;

// ===================================
// UTILITY MIXINS
// ===================================

// Base resource container styling
@mixin resource-container-base {
  position: relative;
  overflow: hidden;
  transition: all $resource-transition-medium ease;
  display: flex;
  flex-direction: column;
  border-radius: $resource-radius-xl;
  border: $resource-border-base solid;
}

// Resource section styling
@mixin resource-section-base {
  display: flex;
  align-items: center;
  justify-content: center;
  width: $resource-percent-full;
  position: relative;
}

// Upper section (label) styling
@mixin resource-upper-section {
  @include resource-section-base;

  height: $resource-height-upper;
  padding: 0; // No padding to allow full width labels

  // Label styling within upper section
  .erps-resource-box__label,
  .erps-stat-box__label {
    width: $resource-percent-full;
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    padding: 0 $resource-spacing-xs; // Minimal padding only to prevent edge touching
  }
}

// Lower section (inputs/data) styling
@mixin resource-lower-section {
  @include resource-section-base;

  height: $resource-height-lower;
  padding: 0 $resource-spacing-sm; // Minimal side padding
  gap: $resource-spacing-xs;

  // Ensure inputs/content fit properly
  .erps-resource-box__input,
  .erps-stat-box__value,
  .resource-content {
    flex: 1;
    min-width: $resource-width-input-min;
  }

  // Special handling for single input (fill space)
  &:has(.erps-resource-box__input:only-child) .erps-resource-box__input,
  &:has(.erps-stat-box__value:only-child) .erps-stat-box__value {
    flex: 1;
    max-width: $resource-percent-full;
  }
}

// Optional third section (resource labels)
@mixin resource-third-section {
  @include resource-section-base;

  height: $resource-height-third;
  padding: 0 $resource-spacing-xs;
  font-size: $resource-font-size-label-xs;
  color: themes.color(white, 70);

  &:empty {
    // Still take up space for alignment even when empty
    visibility: hidden;
  }
}

// Animated glow effect for resource boxes
@mixin resource-glow-animation($color: themes.color(blue, 20)) {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: (- $resource-percent-full);
    width: $resource-percent-full;
    height: $resource-percent-full;
    background: linear-gradient(
      90deg,
      transparent,
      $color,
      transparent
    );
    transition: left $resource-transition-slow ease;
    z-index: 1;
  }

  &:hover::before {
    left: $resource-percent-full;
  }

  // Ensure content is above the glow effect
  > * {
    position: relative;
    z-index: 2;
  }
}

// Resource text styling mixin
@mixin resource-text-base($font-family: var(--erps-info-font)) {
  font-family: $font-family !important;
  font-weight: $resource-font-weight-semibold !important;
  text-transform: uppercase !important;
  text-shadow: 0 $resource-shadow-offset-xs $resource-shadow-offset-sm themes.color(black, 80) !important;
}

// Resource value styling mixin
@mixin resource-value-base($font-family: var(--erps-mono-font)) {
  font-family: $font-family !important;
  font-weight: $resource-font-weight-bold !important;
  color: #fff !important;
  text-shadow:
    0 $resource-shadow-offset-sm $resource-shadow-offset-md themes.color(black, 80),
    0 0 $resource-glow-blur-md themes.color(blue, 60) !important;
}

// Color variant mixin for resource boxes
@mixin resource-box-variant($primary-color, $secondary-color) {
  background: linear-gradient(
    135deg,
    themes.color($primary-color, 90) 0%,
    themes.color($primary-color, 80) 100%
  );
  border-color: themes.color($secondary-color, 50);

  @include resource-glow-animation(themes.color($secondary-color, 20));

  .erps-resource-box__value {
    text-shadow:
      0 $resource-shadow-offset-sm $resource-shadow-offset-md themes.color(black, 80),
      0 0 $resource-glow-blur-md themes.color($secondary-color, 60) !important;
  }

  .erps-resource-box__input {
    background: themes.color($primary-color, 80) !important;
    border-color: themes.color($secondary-color, 40) !important;

    &:focus {
      border-color: themes.color($secondary-color, 80) !important;
      box-shadow:
        0 0 0 2px themes.color($secondary-color, 30),
        0 0 $resource-glow-blur-md themes.color($secondary-color, 40) !important;
    }
  }
}

// Color variant mixin for stat boxes
@mixin stat-box-variant($primary-color, $secondary-color) {
  background: linear-gradient(
    135deg,
    themes.color($primary-color, 70) 0%,
    themes.color($primary-color, 60) 100%
  );
  border-color: themes.color($secondary-color, 40);

  .erps-stat-box__value {
    text-shadow: 0 $resource-shadow-offset-xs $resource-radius-xs themes.color(black, 80),
      0 0 $resource-glow-blur-sm themes.color($secondary-color, 50) !important;
  }
}

// ===================================
// GENERAL RESOURCE SELECTORS
// ===================================
// These are global selectors that can be used anywhere for basic resource styling

.resource-label {
  @include resource-text-base;

  color: themes.color(white, 90);
  font-size: $resource-font-size-label-md;
}

.resource-value {
  @include resource-value-base;

  display: inline-block;
  padding: $resource-padding-input;
  background: themes.color(black, 40) !important;
  border: $resource-border-thin solid themes.color(white, 15) !important;
  border-radius: $resource-radius-sm;
  color: themes.color(white, 90) !important;
  font-weight: 500;
  text-align: center;
  min-width: $resource-width-input-min;
  font-family: monospace;
  font-size: $resource-font-size-value-md;
  opacity: $resource-opacity-default;
  cursor: default;
  user-select: none;
  box-shadow: inset 0 $resource-shadow-offset-xs $resource-radius-xs themes.color(black, 30);

  &:hover {
    opacity: $resource-opacity-full;
    background: themes.color(black, 50) !important;
  }
}

// ===================================
// ENHANCED RESOURCE BOX COMPONENT
// ===================================

.erps-resource-box {
  @include resource-container-base;

  // Move all direct declarations before nested rules and includes with nested content
  background: linear-gradient(
    135deg,
    themes.color(blue-dark, 90) 0%,
    themes.color(blue-dark, 80) 100%
  );
  border-color: themes.color(blue, 50);
  box-shadow:
    0 $resource-shadow-blur-xs $resource-shadow-blur-xxl themes.color(black, 30),
    inset 0 $resource-shadow-offset-xs 0 themes.color(white, 10);

  // Include glow animation last since it contains nested rules
  @include resource-glow-animation(themes.color(blue, 20));

  // Upper section - always contains the main label
  &__upper {
    @include resource-upper-section;
  }

  // Lower section - contains inputs or data
  &__lower {
    @include resource-lower-section;
  }

  // Optional third section - for resource labels (can be above or below lower)
  &__third {
    @include resource-third-section;
  }

  // Label styling
  &__label {
    @include resource-text-base;

    font-size: $resource-font-size-label-md !important;
    color: themes.color(white, 90) !important;
    letter-spacing: $resource-letter-spacing-loose !important;
    line-height: 1.2 !important;
  }

  // Input styling
  &__input {
    font-family: var(--erps-mono-font) !important;
    font-size: $resource-font-size-value-md !important;
    font-weight: 600 !important;
    color: #fff !important;
    background: themes.color(blue-dark, 80) !important;
    border: 1px solid themes.color(blue, 40) !important;
    border-radius: $resource-radius-sm !important;
    padding: $resource-padding-input !important;
    text-align: center !important;
    text-shadow: 0 $resource-shadow-offset-xs $resource-shadow-offset-sm themes.color(black, 80) !important;
    transition: all $resource-transition-base ease !important;

    &:focus {
      border-color: themes.color(blue, 80) !important;
      box-shadow:
        0 0 0 2px themes.color(blue, 30),
        0 0 $resource-glow-blur-md themes.color(blue, 40) !important;
      outline: none !important;
    }
  }

  // Separator styling (like "/")
  &__separator {
    font-family: var(--erps-mono-font) !important;
    font-size: $resource-font-size-label-lg !important;
    color: themes.color(white, 80) !important;
    text-shadow: 0 $resource-shadow-offset-xs $resource-shadow-offset-sm themes.color(black, 80) !important;
    flex-shrink: 0;
  }

  // Value display styling
  &__value {
    @include resource-value-base;

    font-size: $resource-font-size-value-xl !important;
    text-align: center;
  }

  // Color variants
  &--health {
    @include resource-box-variant(red-dark, red);
  }

  &--mana {
    @include resource-box-variant(purple-dark, purple);
  }

  &--neutral {
    @include resource-box-variant(gray-dark, gray);
  }
}

// ===================================
// SECONDARY STAT BOX COMPONENT
// ===================================

.erps-stat-box {
  @include resource-container-base;

  background: linear-gradient(
    135deg,
    themes.color(blue-dark, 70) 0%,
    themes.color(blue-dark, 60) 100%
  );
  border-color: themes.color(blue, 40);
  box-shadow:
    0 $resource-shadow-offset-sm $resource-shadow-blur-md themes.color(black, 20),
    inset 0 $resource-shadow-offset-xs 0 themes.color(white, 5);

  // Upper section - always contains the main label
  &__upper {
    @include resource-upper-section;
  }

  // Lower section - contains values or data
  &__lower {
    @include resource-lower-section;
  }

  // Optional third section - for resource labels
  &__third {
    @include resource-third-section;
  }

  // Label styling
  &__label {
    @include resource-text-base;

    font-size: $resource-font-size-label-sm !important;
    color: themes.color(white, 80) !important;
    letter-spacing: $resource-letter-spacing-base !important;
    line-height: $resource-line-height-base !important;
  }

  // Value styling
  &__value {
    @include resource-value-base;

    font-size: $resource-font-size-value-lg !important;
    text-align: center;
  }

  // Separator styling (like "-")
  &__separator {
    font-family: var(--erps-mono-font) !important;
    font-size: $resource-font-size-value-lg !important;
    color: themes.color(white, 80) !important;
    text-shadow: 0 $resource-shadow-offset-xs $resource-shadow-offset-sm themes.color(black, 80) !important;
    flex-shrink: 0;
  }

  // Color variants for stat boxes
  &--health {
    @include stat-box-variant(red-dark, red);
  }

  &--mana {
    @include stat-box-variant(purple-dark, purple);
  }

  &--neutral {
    @include stat-box-variant(gray-dark, gray);
  }
}

// ===================================
// GRID CONTAINER STYLING
// ===================================
// Ensure resource boxes in the same grid row have equal heights and section alignment

.resources.grid {
  display: grid;
  gap: $resource-spacing-base;
  align-items: stretch; // Force all grid items to stretch to the same height

  &.grid-3col {
    grid-template-columns: repeat(3, 1fr);
  }

  &.grid-4col {
    grid-template-columns: repeat(4, 1fr);
  }

  // Ensure all resource boxes stretch to fill their grid cell
  .erps-resource-box,
  .erps-stat-box {
    height: $resource-percent-full; // Fill the grid cell height

    // Calculate section heights based on whether third section exists
    &:not(:has(.erps-resource-box__third, .erps-stat-box__third)) {
      // Two-section layout: upper + lower
      .erps-resource-box__upper,
      .erps-stat-box__upper {
        flex: 0 0 $resource-height-upper;
      }

      .erps-resource-box__lower,
      .erps-stat-box__lower {
        flex: 1; // Take remaining space
      }
    }

    &:has(.erps-resource-box__third, .erps-stat-box__third) {
      // Three-section layout: distribute space
      .erps-resource-box__upper,
      .erps-stat-box__upper {
        flex: 0 0 $resource-height-upper;
      }

      .erps-resource-box__third,
      .erps-stat-box__third {
        flex: 0 0 $resource-height-third;
      }

      .erps-resource-box__lower,
      .erps-stat-box__lower {
        flex: 1; // Take remaining space
      }
    }
  }

  // If any box in the row has a third section, all should reserve space for it
  &:has(.erps-resource-box__third, .erps-stat-box__third) {
    .erps-resource-box:not(:has(.erps-resource-box__third)),
    .erps-stat-box:not(:has(.erps-stat-box__third)) {
      // Add invisible third section for alignment
      &::after {
        content: '';
        height: $resource-height-third;
        flex: 0 0 $resource-height-third;
      }
    }
  }
}
