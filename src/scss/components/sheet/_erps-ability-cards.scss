// ===================================
// ABILITY CARDS COMPONENT
// ===================================
// Reusable ability display system with interactive buttons and status indicators
// Extracted from character sheet and modernized following refactoring guidelines

@use "../../utils/colors" as colors;
@use "../../utils/mixins" as mixins;
@use "../../utils/sheet-tokens" as sheet;

// ===================================
// UTILITY MIXINS
// ===================================

// Base ability card styling
@mixin ability-card-base {
  display: flex;
  flex-direction: row;
  align-items: center;
  border-radius: sheet.$sheet-radius-sm;
  border: sheet.$sheet-border-base solid transparent;
  background: linear-gradient(
    135deg,
    rgb(0 0 0 / 30%) 0%,
    rgb(20 30 45 / 40%) 50%,
    rgb(0 0 0 / 30%) 100%
  );
  padding: sheet.$sheet-padding-input;
  transition: all sheet.$sheet-transition-medium ease;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  height: sheet.$sheet-height-ability-card;
  width: sheet.$sheet-percent-full;
  max-width: sheet.$sheet-percent-full;
  min-width: 0;
}

// Ability card left border indicator
@mixin ability-card-border-indicator {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: sheet.$sheet-border-accent;
  height: sheet.$sheet-percent-full;
  z-index: 1;
  transition: all sheet.$sheet-transition-medium ease;
}

// Input styling for ability cards
@mixin ability-card-input {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  width: sheet.$sheet-width-input !important;
  height: sheet.$sheet-height-input !important;
  min-height: sheet.$sheet-height-input !important;
  max-height: sheet.$sheet-height-input !important;
  padding: 0 !important;
  margin: 0 !important;
  font-size: sheet.$sheet-font-size-md !important;
  line-height: sheet.$sheet-line-height-tight !important;
  text-align: center !important;
  background: rgb(0 0 0 / 30%) !important;
  border: sheet.$sheet-border-thin solid rgb(255 255 255 / 20%) !important;
  border-radius: sheet.$sheet-radius-xs !important;
  color: #fff !important;
  flex-shrink: 0 !important;
  box-sizing: border-box !important;
  vertical-align: middle !important;
  font-family: inherit !important;
  font-weight: normal !important;
  letter-spacing: normal !important;
  text-transform: none !important;

  &:focus {
    border-color: rgb(255 255 255 / 50%) !important;
    box-shadow: 0 0 sheet.$sheet-shadow-blur-xs rgb(255 255 255 / 30%) !important;
    outline: none !important;
  }

  &:hover {
    border-color: rgb(255 255 255 / 40%) !important;
  }
}

// Button styling for ability cards
@mixin ability-card-button {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  width: sheet.$sheet-width-button !important;
  height: sheet.$sheet-height-button !important;
  min-height: sheet.$sheet-height-button !important;
  max-height: sheet.$sheet-height-button !important;
  min-width: sheet.$sheet-width-button !important;
  max-width: sheet.$sheet-width-button !important;
  padding: 0 !important;
  margin: 0 !important;
  border-radius: sheet.$sheet-radius-xs !important;
  color: #fff !important;
  cursor: pointer !important;
  transition: all sheet.$sheet-transition-base ease !important;
  flex-shrink: 0 !important;
  font-size: sheet.$sheet-font-size-md !important;
  font-weight: bold !important;
  line-height: sheet.$sheet-line-height-tight !important;
  position: relative !important;
  overflow: hidden !important;
  box-sizing: border-box !important;
  vertical-align: middle !important;
  text-decoration: none !important;
  text-transform: none !important;
  letter-spacing: normal !important;

  // Default styling
  background: rgb(255 255 255 / 10%);
  border: sheet.$sheet-border-thin solid rgb(255 255 255 / 30%);
  text-shadow: 0 0 sheet.$sheet-shadow-blur-xs rgb(255 255 255 / 60%);
  box-shadow:
    0 0 sheet.$sheet-shadow-blur-sm rgb(255 255 255 / 40%),
    inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 20%);

  &:active {
    transform: scale(sheet.$sheet-transform-scale-active);
  }

  // Subtle animated background shimmer
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: (- sheet.$sheet-percent-full);
    width: sheet.$sheet-percent-full;
    height: sheet.$sheet-percent-full;
    background: linear-gradient(
      90deg,
      transparent,
      rgb(255 255 255 / 20%),
      transparent
    );
    animation: button-shimmer sheet.$sheet-animation-shimmer ease-in-out infinite;
  }
}

// Status container styling
@mixin ability-card-status {
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
  flex-shrink: 0 !important;
  width: sheet.$sheet-size-status-element !important;
  height: sheet.$sheet-size-status-element !important;
  min-height: sheet.$sheet-size-status-element !important;
  max-height: sheet.$sheet-size-status-element !important;
  min-width: sheet.$sheet-size-status-element !important;
  max-width: sheet.$sheet-size-status-element !important;
  padding: 0 !important;
  margin: 0 !important;
  border-radius: sheet.$sheet-radius-xs !important;
  background: rgb(0 0 0 / 30%) !important;
  border: sheet.$sheet-border-thin solid rgb(255 255 255 / 20%) !important;
  transition: all sheet.$sheet-transition-base ease !important;
  box-sizing: border-box !important;
  vertical-align: middle !important;
  position: relative !important;
  overflow: visible !important;

  &:hover {
    background: rgb(0 0 0 / 40%) !important;
    border-color: rgb(255 255 255 / 35%) !important;
  }
}

// Lock/unlock icon styling
@mixin ability-card-icon {
  font-size: sheet.$sheet-font-size-label-lg !important;
  opacity: sheet.$sheet-opacity-default !important;
  transition: all sheet.$sheet-transition-base ease !important;
  display: inline-block !important;
  line-height: sheet.$sheet-line-height-tight !important;
  vertical-align: middle !important;
  margin: 0 !important;
  padding: 0 !important;
  text-decoration: none !important;
  text-transform: none !important;

  &:hover {
    opacity: sheet.$sheet-opacity-full !important;
    transform: scale(sheet.$sheet-transform-scale-icon) !important;
  }
}

// ===================================
// ABILITY CARDS CONTAINER
// ===================================

.header-abilities {
  gap: sheet.$sheet-spacing-xs;
  padding: sheet.$sheet-spacing-xs;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: sheet.$sheet-percent-full; // Match the height of the header content
}

// ===================================
// MAIN ABILITY CARD COMPONENT
// ===================================

.eventide-ability-card {
  @include ability-card-base;

  // Base styling with left border indicator
  &::before {
    @include ability-card-border-indicator;
  }

  &__content {
    position: relative;
    z-index: 2;
    display: flex;
    flex-direction: row;
    align-items: center;
    width: sheet.$sheet-percent-full;
    gap: sheet.$sheet-spacing-sm;
    justify-content: space-between;
  }

  &__header {
    flex-shrink: 0;
    min-width: sheet.$sheet-width-header-min;
    max-width: sheet.$sheet-width-header-max;
    width: sheet.$sheet-width-header;
  }

  &__label {
    font-size: sheet.$sheet-font-size-sm;
    font-weight: sheet.$sheet-font-weight-semibold;
    color: rgb(255 255 255 / 80%);
    text-transform: uppercase;
    letter-spacing: sheet.$sheet-letter-spacing-tight;
    line-height: sheet.$sheet-line-height-tight;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    cursor: help;
    transition: color sheet.$sheet-transition-base ease;

    &:hover {
      color: rgb(255 255 255 / 100%);
    }
  }

  &__stats {
    display: flex;
    align-items: center;
    gap: sheet.$sheet-spacing-sm;
    flex-grow: 1;
  }

  &__input {
    @include ability-card-input;
  }

  &__total-button {
    @include ability-card-button;
  }

  &__status {
    @include ability-card-status;
  }

  &__lock {
    @include ability-card-icon;

    color: #ff6b6b;
    text-shadow: 0 0 sheet.$sheet-shadow-blur-xs rgb(255 107 107 / 60%);
  }

  &__unlock {
    @include ability-card-icon;

    color: #4CAF50;
    text-shadow: 0 0 sheet.$sheet-shadow-blur-xs rgb(76 175 80 / 60%);
  }

  // Hover effects with themed backgrounds and patterns
  &:hover {
    transform: translateY(sheet.$sheet-transform-hover-sm);
    box-shadow: 0 sheet.$sheet-shadow-offset-sm sheet.$sheet-shadow-blur-md rgb(0 0 0 / 30%);

    &::before {
      width: sheet.$sheet-percent-full;
      opacity: 0.15;
    }
  }

  // ===================================
  // ABILITY-SPECIFIC STYLING
  // ===================================

  // Acrobatics
  &--acro {
    &::before {
      background: colors.$acro;
    }

    .eventide-ability-card__total-button {
      background: rgb(191 68 0 / 30%);
      border: sheet.$sheet-border-thin solid rgb(191 68 0 / 50%);
      text-shadow: 0 0 sheet.$sheet-shadow-blur-xs rgb(191 68 0 / 80%);
      box-shadow:
        0 0 sheet.$sheet-shadow-blur-sm rgb(191 68 0 / 40%),
        inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 20%);
      animation: acro-glow sheet.$sheet-animation-fast ease-in-out infinite alternate;

      &::before {
        background: linear-gradient(
          90deg,
          transparent,
          rgb(191 68 0 / 30%),
          transparent
        );
      }

      &:hover {
        background: rgb(191 68 0 / 50%);
        border-color: rgb(191 68 0 / 70%);
        transform: scale(sheet.$sheet-transform-scale-hover);
        box-shadow:
          0 0 sheet.$sheet-shadow-blur-lg rgb(191 68 0 / 60%),
          inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 30%);
      }
    }

    &:hover {
      background: linear-gradient(
        135deg,
        rgb(191 68 0 / 20%) 0%,
        rgb(191 68 0 / 10%) 50%,
        rgb(191 68 0 / 5%) 100%
      );

      &::after {
        content: '';
        position: absolute;
        inset: 0;
        background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23bf4400' fill-opacity='0.1'%3E%3Cpath d='M10 2l2 6h6l-5 4 2 6-5-4-5 4 2-6-5-4h6z'/%3E%3C/g%3E%3C/svg%3E");
        pointer-events: none;
        z-index: 1;
      }
    }
  }

  // Physical
  &--phys {
    &::before {
      background: colors.$phys;
    }

    .eventide-ability-card__total-button {
      background: rgb(168 3 3 / 30%);
      border: sheet.$sheet-border-thin solid rgb(168 3 3 / 50%);
      text-shadow: 0 0 sheet.$sheet-shadow-blur-xs rgb(168 3 3 / 80%);
      box-shadow:
        0 0 sheet.$sheet-shadow-blur-sm rgb(168 3 3 / 40%),
        inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 20%);
      animation: phys-glow sheet.$sheet-animation-fast ease-in-out infinite alternate;

      &::before {
        background: linear-gradient(
          90deg,
          transparent,
          rgb(168 3 3 / 30%),
          transparent
        );
      }

      &:hover {
        background: rgb(168 3 3 / 50%);
        border-color: rgb(168 3 3 / 70%);
        transform: scale(sheet.$sheet-transform-scale-hover);
        box-shadow:
          0 0 sheet.$sheet-shadow-blur-lg rgb(168 3 3 / 60%),
          inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 30%);
      }
    }

    &:hover {
      background: linear-gradient(
        135deg,
        rgb(168 3 3 / 20%) 0%,
        rgb(168 3 3 / 10%) 50%,
        rgb(168 3 3 / 5%) 100%
      );

      &::after {
        content: '';
        position: absolute;
        inset: 0;
        background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23a80303' fill-opacity='0.1'%3E%3Crect x='8' y='2' width='4' height='16'/%3E%3Crect x='2' y='8' width='16' height='4'/%3E%3C/g%3E%3C/svg%3E");
        pointer-events: none;
        z-index: 1;
      }
    }
  }

  // Fortitude
  &--fort {
    &::before {
      background: colors.$fort;
    }

    .eventide-ability-card__total-button {
      background: rgb(45 104 45 / 30%);
      border: sheet.$sheet-border-thin solid rgb(45 104 45 / 50%);
      text-shadow: 0 0 sheet.$sheet-shadow-blur-xs rgb(45 104 45 / 80%);
      box-shadow:
        0 0 sheet.$sheet-shadow-blur-sm rgb(45 104 45 / 40%),
        inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 20%);
      animation: fort-glow sheet.$sheet-animation-fast ease-in-out infinite alternate;

      &::before {
        background: linear-gradient(
          90deg,
          transparent,
          rgb(45 104 45 / 30%),
          transparent
        );
      }

      &:hover {
        background: rgb(45 104 45 / 50%);
        border-color: rgb(45 104 45 / 70%);
        transform: scale(sheet.$sheet-transform-scale-hover);
        box-shadow:
          0 0 sheet.$sheet-shadow-blur-lg rgb(45 104 45 / 60%),
          inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 30%);
      }
    }

    &:hover {
      background: linear-gradient(
        135deg,
        rgb(45 104 45 / 20%) 0%,
        rgb(45 104 45 / 10%) 50%,
        rgb(45 104 45 / 5%) 100%
      );

      &::after {
        content: '';
        position: absolute;
        inset: 0;
        background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%232d682d' fill-opacity='0.1'%3E%3Cpath d='M10 2L4 6v8l6 4 6-4V6z'/%3E%3C/g%3E%3C/svg%3E");
        pointer-events: none;
        z-index: 1;
      }
    }
  }

  // Willpower
  &--will {
    &::before {
      background: colors.$will;
    }

    .eventide-ability-card__total-button {
      background: rgb(106 27 154 / 30%);
      border: sheet.$sheet-border-thin solid rgb(106 27 154 / 50%);
      text-shadow: 0 0 sheet.$sheet-shadow-blur-xs rgb(106 27 154 / 80%);
      box-shadow:
        0 0 sheet.$sheet-shadow-blur-sm rgb(106 27 154 / 40%),
        inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 20%);
      animation: will-glow sheet.$sheet-animation-fast ease-in-out infinite alternate;

      &::before {
        background: linear-gradient(
          90deg,
          transparent,
          rgb(106 27 154 / 30%),
          transparent
        );
      }

      &:hover {
        background: rgb(106 27 154 / 50%);
        border-color: rgb(106 27 154 / 70%);
        transform: scale(sheet.$sheet-transform-scale-hover);
        box-shadow:
          0 0 sheet.$sheet-shadow-blur-lg rgb(106 27 154 / 60%),
          inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 30%);
      }
    }

    &:hover {
      background: linear-gradient(
        135deg,
        rgb(106 27 154 / 20%) 0%,
        rgb(106 27 154 / 10%) 50%,
        rgb(106 27 154 / 5%) 100%
      );

      &::after {
        content: '';
        position: absolute;
        inset: 0;
        background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%236a1b9a' fill-opacity='0.1'%3E%3Ccircle cx='10' cy='10' r='8'/%3E%3Ccircle cx='10' cy='10' r='4'/%3E%3C/g%3E%3C/svg%3E");
        pointer-events: none;
        z-index: 1;
      }
    }
  }

  // Wits
  &--wits {
    &::before {
      background: colors.$wits;
    }

    .eventide-ability-card__total-button {
      background: rgb(14 67 128 / 30%);
      border: sheet.$sheet-border-thin solid rgb(14 67 128 / 50%);
      text-shadow: 0 0 sheet.$sheet-shadow-blur-xs rgb(14 67 128 / 80%);
      box-shadow:
        0 0 sheet.$sheet-shadow-blur-sm rgb(14 67 128 / 40%),
        inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 20%);
      animation: wits-glow sheet.$sheet-animation-fast ease-in-out infinite alternate;

      &::before {
        background: linear-gradient(
          90deg,
          transparent,
          rgb(14 67 128 / 30%),
          transparent
        );
      }

      &:hover {
        background: rgb(14 67 128 / 50%);
        border-color: rgb(14 67 128 / 70%);
        transform: scale(sheet.$sheet-transform-scale-hover);
        box-shadow:
          0 0 sheet.$sheet-shadow-blur-lg rgb(14 67 128 / 60%),
          inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 30%);
      }
    }

    &:hover {
      background: linear-gradient(
        135deg,
        rgb(14 67 128 / 20%) 0%,
        rgb(14 67 128 / 10%) 50%,
        rgb(14 67 128 / 5%) 100%
      );

      &::after {
        content: '';
        position: absolute;
        inset: 0;
        background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%230e4380' fill-opacity='0.1'%3E%3Cpath d='M10 2l8 6-8 2-8-2z'/%3E%3Cpath d='M10 12l8 6-8-2-8 2z'/%3E%3C/g%3E%3C/svg%3E");
        pointer-events: none;
        z-index: 1;
      }
    }
  }
}

// ===================================
// LEGACY ABILITY BOX SELECTORS
// ===================================
// These provide backward compatibility for existing templates

.eventide-ability-acro-box {
  background-color: colors.$acro-transparent;
  border-left: sheet.$sheet-spacing-sm solid colors.$acro;
}

.eventide-ability-phys-box {
  background-color: colors.$phys-transparent;
  border-left: sheet.$sheet-spacing-sm solid colors.$phys;
}

.eventide-ability-fort-box {
  background-color: colors.$fort-transparent;
  border-left: sheet.$sheet-spacing-sm solid colors.$fort;
}

.eventide-ability-will-box {
  background-color: colors.$will-transparent;
  border-left: sheet.$sheet-spacing-sm solid colors.$will;
}

.eventide-ability-wits-box {
  background-color: colors.$wits-transparent;
  border-left: sheet.$sheet-spacing-sm solid colors.$wits;
}

// ===================================
// ANIMATIONS
// ===================================

// Ability-specific glow animations
@keyframes acro-glow {
  0% {
    box-shadow:
      0 0 sheet.$sheet-shadow-blur-sm rgb(191 68 0 / 40%),
      inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 sheet.$sheet-glow-blur-sm rgb(191 68 0 / 60%),
      inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 30%);
  }
}

@keyframes phys-glow {
  0% {
    box-shadow:
      0 0 sheet.$sheet-shadow-blur-sm rgb(168 3 3 / 40%),
      inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 sheet.$sheet-glow-blur-sm rgb(168 3 3 / 60%),
      inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 30%);
  }
}

@keyframes fort-glow {
  0% {
    box-shadow:
      0 0 sheet.$sheet-shadow-blur-sm rgb(45 104 45 / 40%),
      inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 sheet.$sheet-glow-blur-sm rgb(45 104 45 / 60%),
      inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 30%);
  }
}

@keyframes will-glow {
  0% {
    box-shadow:
      0 0 sheet.$sheet-shadow-blur-sm rgb(106 27 154 / 40%),
      inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 sheet.$sheet-glow-blur-sm rgb(106 27 154 / 60%),
      inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 30%);
  }
}

@keyframes wits-glow {
  0% {
    box-shadow:
      0 0 sheet.$sheet-shadow-blur-sm rgb(14 67 128 / 40%),
      inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 sheet.$sheet-glow-blur-sm rgb(14 67 128 / 60%),
      inset 0 sheet.$sheet-shadow-offset-xs 0 rgb(255 255 255 / 30%);
  }
}

@keyframes button-shimmer {
  0% {
    left: (- sheet.$sheet-percent-full);
  }

  50% {
    left: sheet.$sheet-percent-full;
  }

  100% {
    left: sheet.$sheet-percent-full;
  }
}
