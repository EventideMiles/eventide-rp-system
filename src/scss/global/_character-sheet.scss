@use "../utils/colors" as colors;
@use "../utils/typography" as typography;
@use "../utils/mixins" as mixins;
@use "../utils/tokens" as tokens;
@use "../utils/themes" as themes;

// General selectors (must come before any specific theme selectors for proper specificity)
label,
.form-group label,
.section-header {
  font-family: var(--erps-info-font) !important;
  font-weight: 600 !important;
  letter-spacing: 0.3px !important;
}

// General i selector removed due to specificity conflicts with themed selectors

// General pseudo-element selectors removed due to invalid top-level > usage

// General ::after pseudo-element removed due to invalid top-level & usage

// General resource selectors (must come before specific ones)
.resource-label {
  color: colors.$universal-white;
  text-shadow: 1px 1px 2px rgb(0 0 0 / 80%);
  font-weight: bold;
  font-size: 0.9rem;
}

.resource-value {
  display: inline-block;
  padding: tokens.$spacing-sm;
  background: rgb(0 0 0 / 40%) !important;
  border: 1px solid rgb(255 255 255 / 15%) !important;
  border-radius: tokens.$radius-sm;
  color: colors.$universal-white !important;
  text-shadow: 1px 1px 2px rgb(0 0 0 / 80%);
  font-weight: 500;
  text-align: center;
  min-width: 2rem;
  font-family: monospace;
  font-size: 1rem;
  opacity: 0.9;
  cursor: default;
  user-select: none;
  box-shadow: inset 0 1px 3px rgb(0 0 0 / 30%);

  &:hover {
    opacity: 1;
    background: rgb(0 0 0 / 50%) !important;
  }
}

// General character name selector (must come before specific ones)
.eventide-actor__character-name {
  font-size: 2.5rem !important;
  font-weight: bold;
  color: colors.$universal-white;
  height: 5rem !important;
  min-height: 5rem;
  padding: 0.5rem 1rem;
  text-align: center !important;
  background: linear-gradient(
    135deg,
    rgb(0 0 0 / 30%) 0%,
    rgb(20 30 45 / 40%) 50%,
    rgb(0 0 0 / 30%) 100%
  );
  border: 2px inset colors.$universal-white !important;
  border-radius: 8px;
  text-shadow:
    0 0 10px rgb(255 255 255 / 50%),
    2px 2px 4px rgb(0 0 0 / 80%);
  box-shadow: inset 0 2px 4px rgb(0 0 0 / 30%);
  margin-bottom: 0;

  &:focus {
    box-shadow:
      inset 0 2px 4px rgb(0 0 0 / 30%),
      0 0 15px colors.$white-text-glow;
    text-shadow:
      0 0 15px colors.$white-text-glow,
      2px 2px 4px rgb(0 0 0 / 80%);
  }
}

.eventide-ability-row {
  border-radius: 0.5rem;
  padding: 0.25rem;
  color: colors.$universal-white;
  text-align: center;

  // Also target any children of ability-override (moved before main selector to fix specificity)
  .ability-override * {
    text-shadow: none !important;

    &:hover {
      text-shadow: none !important;
    }
  }

  // Apply hover effect only to direct children that are not inputs or ability-override
  > *:not(input, .ability-override):hover {
    text-shadow: 0 0 0.125rem colors.$white-text-glow, 0 0 0.25rem colors.$white-text-glow, 0 0 0.375rem colors.$white-text-glow;
    color: colors.$universal-white;
  }

  // Ensure ability-override never gets the hover effect
  .ability-override {
    color: colors.$universal-white;
    text-shadow: none !important;

    &:hover {
      text-shadow: none !important;
    }
  }
}

// Transformation Effect Card - now designed for status bar
.eventide-transformation-card {
  display: flex;
  align-items: center;
  margin: 0; // RM margin since it's in status bar
  padding: 0.5rem 0.75rem; // More compact padding
  border-radius: 6px; // Smaller radius to match status indicators
  border: 2px solid rgb(77 148 255 / 60%);
  background: linear-gradient(
    135deg,
    rgb(77 148 255 / 15%) 0%,
    rgb(30 40 60 / 80%) 50%,
    rgb(77 148 255 / 10%) 100%
  );
  box-shadow:
    0 0 10px rgb(77 148 255 / 30%),
    inset 0 1px 0 rgb(255 255 255 / 10%);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  flex: 0 0 auto; // Don't grow or shrink
  max-width: 20rem; // Limit width in status bar
  cursor: grab; // Indicate draggable
  user-select: none; // Prevent text selection during drag

  // Drag states
  &:hover {
    transform: translateY(-2px);
    box-shadow:
      0 0 15px rgb(77 148 255 / 50%),
      inset 0 1px 0 rgb(255 255 255 / 15%),
      0 4px 8px rgb(0 0 0 / 20%);
    border-color: rgb(77 148 255 / 80%);
  }

  &:active {
    cursor: grabbing;
    transform: translateY(0);
  }

  // Dragging state
  &.dragging {
    opacity: 0.5;
    transform: rotate(5deg);
    z-index: 1000;
  }

  // Animated glow effect - more subtle for status bar
  &::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -50%;
    width: 200%;
    height: calc(100% + 4px);
          background: linear-gradient(
        90deg,
        transparent,
        rgb(77 148 255 / 30%), // More subtle
        transparent
      );
    animation: transformation-glow 4s ease-in-out infinite; // Slower animation
    z-index: 0;
  }

  &__header {
    display: flex;
    align-items: center;
    width: 100%;
    position: relative;
    z-index: 1;
  }

  &__icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.75rem; // Smaller for status bar
    height: 1.75rem;
    border-radius: 50%;
    background: rgb(77 148 255 / 30%);
    border: 2px solid rgb(77 148 255 / 60%);
    margin-right: 0.75rem; // Reduced margin
    flex-shrink: 0;

    i {
      font-size: 0.9rem; // Smaller icon
      color: #fff;
      text-shadow: 0 0 6px rgb(77 148 255 / 80%);
    }
  }

  &__info {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-width: 0; // Allow text truncation
  }

  &__label {
    font-size: 0.7rem; // Smaller label
    font-weight: 600;
    color: rgb(255 255 255 / 80%);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 0.125rem; // Reduced margin
    line-height: 1;
  }

  &__name {
    font-size: 0.9rem; // Smaller name
    font-weight: bold;
    color: #fff;
    text-shadow: 0 0 6px rgb(77 148 255 / 60%);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    line-height: 1.2;
  }

  &__revert {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.5rem; // Smaller button
    height: 1.5rem;
    border-radius: 4px;
    background: rgb(255 255 255 / 10%);
    border: 1px solid rgb(255 255 255 / 30%);
    color: #fff;
    cursor: pointer;
    transition: all 0.2s ease;
    margin-left: 0.75rem; // Reduced margin
    flex-shrink: 0;

    i {
      font-size: 0.75rem; // Smaller icon
    }

    &:hover {
      background: rgb(255 255 255 / 20%);
      border-color: rgb(255 255 255 / 50%);
      transform: scale(1.05);
      box-shadow: 0 0 6px rgb(255 255 255 / 30%);
    }

    &:active {
      transform: scale(0.95);
    }
  }

  &__locked {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.5rem; // Smaller locked indicator
    height: 1.5rem;
    border-radius: 4px;
    background: rgb(0 0 0 / 30%);
    border: 1px solid rgb(255 255 255 / 20%);
    color: rgb(255 255 255 / 60%);
    margin-left: 0.75rem; // Reduced margin
    flex-shrink: 0;
    cursor: not-allowed;

    i {
      font-size: 0.7rem; // Smaller icon
    }
  }

  // Cursed transformation variant moved to end of file for specificity
}

@keyframes transformation-glow {
  0%, 100% {
    left: -50%;
    opacity: 0;
  }

  50% {
    left: 50%;
    opacity: 0.8; // More subtle
  }
}

@keyframes cursed-transformation-glow {
  0%, 100% {
    left: -50%;
    opacity: 0;
  }

  50% {
    left: 50%;
    opacity: 0.8; // More subtle
  }
}

// Make document name flex container
.document-name {
  display: flex;
  align-items: center;

  input {
    flex-grow: 1;
  }
}

.features {
  overflow-y: auto;
}

.eventide-character-sheet {
  // Font variables for game aesthetic
  --erps-display-font: 'Cinzel', 'Libre Baskerville', serif; // For character names and important displays
  --erps-info-font: 'Crimson Text', 'Times New Roman', serif; // For character information
  --erps-ui-font: 'Roboto Condensed', 'Arial Narrow', sans-serif; // For UI elements
  --erps-mono-font: 'Consolas', 'Monaco', 'Courier New', monospace; // For numerical values

  // Base styling for character sheet container
  border-radius: 16px;
  box-shadow:
    0 0 40px rgb(0 0 0 / 60%),
    inset 0 2px 4px rgb(255 255 255 / 5%),
    inset 0 -2px 4px rgb(0 0 0 / 20%);

  // Note: Removed animated overlay to prevent positioning conflicts with Foundry's window system

  // Ensure content appears above background effects
  .sheet-header,
  .sheet-body,
  .tabs,
  .tab {
    position: relative;
    z-index: 1;
  }

  // Apply all background themes using optimized mixins
  @include themes.apply-all-background-themes;

  // Character header styling - now theme-aware
  .eventide-actor__header {
    @include themes.apply-all-themes('header-theme');

    background: linear-gradient(
      135deg,
      var(--theme-accent) 0%,
      var(--theme-primary) 50%,
      var(--theme-secondary) 100%
    );
    border: 2px solid var(--theme-glow);
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 1rem;
    box-shadow:
      0 8px 32px rgb(0 0 0 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 10%);
    position: relative;
    overflow: hidden;

    // Animated background effect
    &::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(
        circle,
        var(--theme-glow) 0%,
        transparent 70%
      );
      animation: header-glow 4s ease-in-out infinite alternate;
      pointer-events: none;
    }

    // Light theme specific overrides
    &[data-header-theme="light"] {
      // Profile image background for light theme
      .eventide-actor__profile-img::after {
        background: rgb(71 85 105 / 80%); // Dark gray background for contrast
      }

      // Toggle label text for light theme
      .eventide-actor__toggle-group label {
        color: var(--theme-text) !important;

        &:hover {
          color: #0f172a !important; // Even darker on hover
        }
      }
    }
  }

  // Character name input theme system with multiple color schemes
  .document-name {
    position: relative !important;
    margin-bottom: 1rem !important;

    @include themes.apply-all-themes('name-theme');

    // Add subtle animated element to the left
    &::before {
      content: '' !important;
      position: absolute !important;
      top: 50% !important;
      left: -25px !important;
      width: 20px !important;
      height: 3px !important;
      background: linear-gradient(90deg,
        transparent 0%,
        var(--theme-glow) 30%,
        var(--theme-light) 70%,
        transparent 100%) !important;
      border-radius: 2px !important;
      transform: translateY(-50%) !important;
      animation: name-input-glow 3s ease-in-out infinite !important;
      z-index: 1 !important;
    }

    // Add decorative elements on both sides
    &::after {
      content: '' !important;
      position: absolute !important;
      top: 50% !important;
      right: -25px !important;
      width: 20px !important;
      height: 3px !important;
      background: linear-gradient(90deg,
        transparent 0%,
        var(--theme-light) 30%,
        var(--theme-glow) 70%,
        transparent 100%) !important;
      border-radius: 2px !important;
      transform: translateY(-50%) !important;
      animation: name-input-glow 3s ease-in-out infinite 1.5s !important;
      z-index: 1 !important;
    }
  }

    // Target the specific character name input class
  .eventide-actor__character-name {
    font-family: var(--erps-display-font) !important;
    font-size: 1.8rem !important;
    font-weight: 600 !important;
    letter-spacing: 1px !important;
    text-align: center !important;
    color: var(--theme-text) !important;
    background: var(--theme-accent) !important; // Flat single color background
    border: 2px solid rgb(255 255 255 / 20%) !important; // Subtle border
    border-radius: 8px !important;
    padding: 12px 20px !important;
    width: 100% !important;
    height: auto !important;
    min-height: 3rem !important;
    box-shadow:
      0 2px 8px rgb(0 0 0 / 30%),
      inset 0 1px 0 rgb(255 255 255 / 10%) !important; // Minimal shadow

    text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important; // Simple text shadow
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
    position: relative !important;

    // z-index: 0 !important;

    // Elegant border effect
    &::before {
      content: '' !important;
      position: absolute !important;
      inset: -2px !important;
      background: linear-gradient(45deg,
        var(--theme-primary), var(--theme-light), var(--theme-secondary), var(--theme-light), var(--theme-primary)) !important;
      border-radius: 10px !important;
      z-index: -1 !important;
      opacity: 0 !important;
      transition: opacity 0.3s ease !important;
    }

    &:hover {
      color: #fff !important;
      background:
        var(--theme-pattern),
        linear-gradient(135deg,
          var(--theme-accent) 0%,
          var(--theme-primary) 25%,
          var(--theme-secondary) 50%,
          var(--theme-primary) 75%,
          var(--theme-accent) 100%) !important;
      background-size: 20px 20px, 100% 100% !important;
      background-position: 0 0, 0 0 !important;
      animation: pattern-shift 8s linear infinite !important;
      box-shadow:
        0 0 30px var(--theme-glow),
        inset 0 2px 4px rgb(0 0 0 / 30%),
        inset 0 -2px 4px rgb(255 255 255 / 20%) !important;
      text-shadow:
        0 1px 3px rgb(0 0 0 / 90%),
        0 0 15px var(--theme-light) !important;
      transform: translateY(-1px) !important;

      &::before {
        opacity: 1 !important;
      }
    }

    &:focus {
      outline: none !important;
      color: #fff !important;
      background:
        var(--theme-pattern),
        linear-gradient(135deg,
          var(--theme-accent) 0%,
          var(--theme-primary) 25%,
          var(--theme-secondary) 50%,
          var(--theme-primary) 75%,
          var(--theme-accent) 100%) !important;
      background-size: 20px 20px, 100% 100% !important;
      background-position: 0 0, 0 0 !important;
      animation: pattern-shift 6s linear infinite !important;
      box-shadow:
        0 0 40px var(--theme-glow),
        0 0 20px var(--theme-light),
        inset 0 2px 6px rgb(0 0 0 / 40%),
        inset 0 -2px 6px rgb(255 255 255 / 30%) !important;
      text-shadow:
        0 1px 4px rgb(0 0 0 / 100%),
        0 0 20px var(--theme-light),
        0 0 30px var(--theme-glow) !important;
      transform: translateY(-2px) !important;

      &::before {
        opacity: 1 !important;
      }
    }

    // Placeholder styling
    &::placeholder {
      color: var(--theme-light) !important;
      opacity: 0.7 !important;
      font-style: italic !important;
      text-shadow: 0 1px 2px rgb(0 0 0 / 60%) !important;
    }
  }

  // Animation for the subtle side elements
  @keyframes name-input-glow {
    0%, 100% {
      opacity: 0.3;
      transform: translateY(-50%) scaleX(0.8);
    }

    50% {
      opacity: 0.8;
      transform: translateY(-50%) scaleX(1.2);
    }
  }

  // Animation for the pattern background
  @keyframes pattern-shift {
    0% {
      background-position: 0 0, 0 0;
    }

    100% {
      background-position: 20px 20px, 0 0;
    }
  }

  // Blue pulse animation for decorative elements
  @keyframes pulse-blue {
    0%, 100% {
      opacity: 0.6;
      transform: translateY(-50%) scale(1);
    }

    50% {
      opacity: 1;
      transform: translateY(-50%) scale(1.2);
    }
  }

  // Resource boxes with game styling
  .eventide-actor__resource-box {
    background: linear-gradient(
      135deg,
      rgb(25 35 55 / 90%) 0%,
      rgb(35 45 65 / 80%) 100%
    );
    border: 2px solid rgb(77 148 255 / 50%);
    border-radius: 10px;
    padding: 1rem;
    text-align: center;
    position: relative;
    overflow: hidden;
    box-shadow:
      0 4px 16px rgb(0 0 0 / 30%),
      inset 0 1px 0 rgb(255 255 255 / 10%);

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        rgb(77 148 255 / 20%),
        transparent
      );
      transition: left 0.6s ease;
    }

    &:hover::before {
      left: 100%;
    }

    .resource-label {
      font-family: var(--erps-info-font) !important;
      font-size: 0.9rem !important;
      font-weight: 600 !important;
      color: rgb(255 255 255 / 90%) !important;
      text-transform: uppercase !important;
      letter-spacing: 1px !important;
      margin-bottom: 0.5rem !important;
      text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important;
    }

    .resource-value {
      font-family: var(--erps-mono-font) !important;
      font-size: 1.4rem !important;
      font-weight: 700 !important;
      color: #fff !important;
      text-shadow:
        0 2px 4px rgb(0 0 0 / 80%),
        0 0 15px rgb(77 148 255 / 60%) !important;
      margin-bottom: 0.25rem !important;
    }

    input.resource-input {
      font-family: var(--erps-mono-font) !important;
      font-size: 1.2rem !important;
      font-weight: 600 !important;
      color: #fff !important;
      background: rgb(15 25 40 / 80%) !important;
      border: 1px solid rgb(77 148 255 / 40%) !important;
      border-radius: 6px !important;
      padding: 0.5rem !important;
      text-align: center !important;
      text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important;

      &:focus {
        border-color: rgb(77 148 255 / 80%) !important;
        box-shadow:
          0 0 0 2px rgb(77 148 255 / 30%),
          0 0 15px rgb(77 148 255 / 40%) !important;
      }
    }

    .resource-max {
      font-family: var(--erps-mono-font) !important;
      font-size: 1rem !important;
      color: rgb(255 255 255 / 80%) !important;
      text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important;
    }
  }

  // Secondary stats styling
  .eventide-actor__secondary-stats {
    .stat-box {
      background: linear-gradient(
        135deg,
        rgb(20 30 45 / 90%) 0%,
        rgb(30 40 55 / 80%) 100%
      );
      border: 1px solid rgb(77 148 255 / 40%);
      border-radius: 8px;
      padding: 0.75rem;
      text-align: center;

      .stat-label {
        font-family: var(--erps-info-font) !important;
        font-size: 0.8rem !important;
        font-weight: 600 !important;
        color: rgb(255 255 255 / 80%) !important;
        text-transform: uppercase !important;
        letter-spacing: 0.5px !important;
        margin-bottom: 0.25rem !important;
        text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important;
      }

      .stat-value {
        font-family: var(--erps-mono-font) !important;
        font-size: 1.1rem !important;
        font-weight: 700 !important;
        color: #fff !important;
        text-shadow:
          0 1px 3px rgb(0 0 0 / 80%),
          0 0 10px rgb(77 148 255 / 50%) !important;
      }
    }
  }

  // Status bar cards with enhanced typography
  .eventide-header__status-bar {
    .status-card {
      .status-card__title {
        font-family: var(--erps-info-font) !important;
        font-weight: 600 !important;
        letter-spacing: 0.5px !important;
        text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important;
      }

      .status-card__content {
        font-family: var(--erps-ui-font) !important;
        font-weight: 500 !important;
        text-shadow: 0 1px 2px rgb(0 0 0 / 60%) !important;
      }

      .status-card__value {
        font-family: var(--erps-mono-font) !important;
        font-weight: 700 !important;
        text-shadow: 0 1px 3px rgb(0 0 0 / 80%) !important;
      }
    }
  }

  // Labels and headings styling is now handled at the top of the file

  // Form inputs throughout the sheet
  input[type="text"],
  input[type="number"],
  textarea,
  select {
    font-family: var(--erps-info-font) !important;

    &.monospace,
    &[data-dtype="Number"] {
      font-family: var(--erps-mono-font) !important;
    }
  }

  // Tab navigation styling is now handled by the erps-tabs component

  // Animation keyframes
  @keyframes header-glow {
    0% {
      opacity: 0.3;
      transform: rotate(0deg) scale(1);
    }

    50% {
      opacity: 0.6;
      transform: rotate(180deg) scale(1.1);
    }

    100% {
      opacity: 0.3;
      transform: rotate(360deg) scale(1);
    }
  }

  // Scrollbars styling is now handled by the erps-tabs component

  // Tab content styling - remove gaps between tabs and content
  // (Combined with earlier .tab selector to avoid duplication)

  // ===================================
  // EVENTIDE ACTOR DATA TABLE SYSTEM
  // ===================================
  // Moved here for proper CSS specificity ordering

  // Base data table component following established theme system
  .eventide-actor-data-table {
    @include themes.apply-all-themes('table-theme');

    width: 100% !important;
    border-collapse: separate !important;
    border-spacing: 0 !important;
    border-radius: 8px !important;
    overflow: hidden !important;

    @include themes.themed-accent-background;
    @include themes.themed-border;
    @include themes.themed-glow-shadow;

    position: relative !important;

    // Header row styling
    &__header {
      background: linear-gradient(135deg,
        var(--theme-primary) 0%,
        var(--theme-secondary) 50%,
        var(--theme-primary) 100%) !important;
      position: relative !important;

      &::before {
        content: '' !important;
        position: absolute !important;
        top: 0 !important;
        left: -100% !important;
        width: 200% !important;
        height: 100% !important;
        background: linear-gradient(90deg,
          transparent,
          rgb(255 255 255 / 10%),
          transparent) !important;
        animation: table-header-glow 4s ease-in-out infinite !important;
        z-index: 1 !important;
      }
    }

    &__header-cell {
      padding: 0.75rem 1rem !important;
      font-family: var(--erps-ui-font) !important;
      font-size: 14pt !important;
      font-weight: 600 !important;
      color: var(--theme-text) !important;
      text-align: center !important;
      text-transform: uppercase !important;
      letter-spacing: 0.5px !important;
      border-bottom: 2px solid rgb(255 255 255 / 20%) !important;
      position: relative !important;
      z-index: 2 !important;
      text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important;
      vertical-align: middle !important;
      min-height: 3rem !important; // Ensure consistent height across all header cells
      height: 3rem !important; // Fixed height for consistency

      // Right align controls column headers
      &:last-child {
        text-align: right !important;
        white-space: nowrap !important;
      }

      // Special styling for gear section titles (i selector moved to end for specificity)
      &.gear-section-title {
        text-align: left !important;
        display: flex !important;
        align-items: center !important;
        gap: 0.5rem !important;
        font-size: 14pt !important; // Match standard header font size
        font-weight: 700 !important;
        height: 3rem !important; // Ensure same height as other headers
        min-height: 3rem !important; // Ensure same height as other headers
      }
    }

    // Data row styling
    &__row {
      background: var(--theme-accent) !important;
      transition: all 0.2s ease !important;
      border-bottom: 1px solid rgb(255 255 255 / 5%) !important;

      &:hover {
        background: var(--theme-pattern),
          linear-gradient(135deg,
            var(--theme-accent) 0%,
            var(--theme-primary) 100%) !important;
        background-size: 20px 20px, 100% 100% !important;
        animation: pattern-shift 8s linear infinite !important;
        box-shadow: inset 0 0 20px rgb(255 255 255 / 10%) !important;
      }

      // Special states
      &--cursed {
        background: linear-gradient(135deg,
          rgb(138 43 226 / 30%) 0%,
          var(--theme-accent) 100%) !important;
        border-left: 4px solid rgb(138 43 226 / 80%) !important;
        animation: cursed-pulse 3s ease-in-out infinite !important;
      }

      &--equipped {
        // Subtle left border to indicate equipped status
        border-left: 3px solid rgb(34 197 94 / 60%) !important;
        background: linear-gradient(135deg,
          rgb(34 197 94 / 8%) 0%,
          var(--theme-accent) 100%) !important;
      }

      &--unequipped {
        opacity: 0.85 !important;
        border-left: 3px solid rgb(100 100 100 / 40%) !important;
        background: linear-gradient(135deg,
          rgb(100 100 100 / 10%) 0%,
          var(--theme-accent) 100%) !important;
      }

      &--disabled {
        opacity: 0.5 !important;
        pointer-events: none !important;
      }
    }

    &__cell {
      padding: 0.75rem 1rem !important;
      font-family: var(--erps-info-font) !important;
      font-size: 14pt !important;
      color: var(--theme-text) !important;
      text-align: center !important;
      vertical-align: middle !important;
      border-bottom: 1px solid rgb(255 255 255 / 5%) !important;
    }

    &__name-cell {
      text-align: left !important;
      vertical-align: middle !important;
      padding: 0.5rem 1rem !important;
    }

    &__name-content {
      display: flex !important;
      align-items: center !important;
      gap: 0.5rem !important;
      width: 100% !important;
      height: 100% !important;

      img {
        width: 24px !important;
        height: 24px !important;
        border-radius: 4px !important;
        border: 1px solid rgb(255 255 255 / 20%) !important;
        transition: all 0.2s ease !important;
        flex-shrink: 0 !important;

        &:hover {
          border-color: var(--theme-light) !important;
          box-shadow: 0 0 8px var(--theme-glow) !important;
        }
      }

      span {
        line-height: 1.2 !important;
        flex: 1 !important;
        min-width: 0 !important;
      }

      a {
        flex-shrink: 0 !important;
      }
    }

    &__prop-cell {
      font-family: var(--erps-mono-font) !important;
      font-weight: 500 !important;
    }

    &__controls-cell {
      display: flex !important;
      align-items: center !important;
      justify-content: flex-end !important;
      gap: 0.25rem !important;
      flex-wrap: nowrap !important;
      text-align: right !important;
      white-space: nowrap !important;
      margin-left: auto !important;
      width: auto !important; // Automatic width based on content
      min-width: min-content !important; // Minimum width to fit header button text
      padding: 0.5rem 0.75rem !important; // Reduced padding
    }

    // Tab-specific styling for data tables
    &:first-child {
      margin-top: 0 !important;
      border-radius: 0 0 8px 8px !important; // Remove top border radius to lay flush against tabs
    }

    // Specific table layouts for different types
    &--features {
      table-layout: auto !important; // Changed from fixed to auto

      .eventide-actor-data-table__header-cell:first-child,
      .eventide-actor-data-table__cell:first-child {
        width: 100% !important; // Take all remaining space
      }

      .eventide-actor-data-table__header-cell:last-child,
      .eventide-actor-data-table__cell:last-child {
        width: auto !important; // Automatic width based on content
        justify-content: flex-end !important;
      }
    }

    &--gear {
      table-layout: auto !important; // Changed from fixed to auto

      .eventide-actor-data-table__header-cell:nth-child(1),
      .eventide-actor-data-table__cell:nth-child(1) {
        width: 50% !important; // Name gets most space
      }

      .eventide-actor-data-table__header-cell:nth-child(2),
      .eventide-actor-data-table__cell:nth-child(2) {
        width: 25% !important; // Cost gets some space
      }

      .eventide-actor-data-table__header-cell:nth-child(3),
      .eventide-actor-data-table__cell:nth-child(3) {
        width: 25% !important; // Quantity gets remaining space
      }

      .eventide-actor-data-table__header-cell:nth-child(4),
      .eventide-actor-data-table__cell:nth-child(4) {
        width: auto !important; // Controls auto-size
      }

      // Special styling for equipped gear tables
      &--equipped {
        border-left: 4px solid rgb(34 197 94 / 60%) !important;
        box-shadow:
          0 4px 12px rgb(0 0 0 / 30%),
          inset 0 1px 0 rgb(255 255 255 / 10%),
          inset 4px 0 0 rgb(34 197 94 / 20%) !important;
      }

      // Special styling for unequipped gear tables
      &--unequipped {
        border-left: 4px solid rgb(100 100 100 / 40%) !important;
        opacity: 0.9 !important;
        box-shadow:
          0 4px 12px rgb(0 0 0 / 30%),
          inset 0 1px 0 rgb(255 255 255 / 10%),
          inset 4px 0 0 rgb(100 100 100 / 15%) !important;
      }
    }

    &--combat-powers {
      table-layout: auto !important; // Changed from fixed to auto

      .eventide-actor-data-table__header-cell:nth-child(1),
      .eventide-actor-data-table__cell:nth-child(1) {
        width: 40% !important; // Name gets most space
      }

      .eventide-actor-data-table__header-cell:nth-child(2),
      .eventide-actor-data-table__cell:nth-child(2) {
        width: 20% !important; // Cost column
      }

      .eventide-actor-data-table__header-cell:nth-child(3),
      .eventide-actor-data-table__cell:nth-child(3) {
        width: 40% !important; // Usage info gets remaining space
      }

      .eventide-actor-data-table__header-cell:nth-child(4),
      .eventide-actor-data-table__cell:nth-child(4) {
        width: auto !important; // Controls auto-size
      }
    }

    &--effects {
      table-layout: fixed !important;

      .eventide-actor-data-table__header-cell:nth-child(1),
      .eventide-actor-data-table__cell:nth-child(1) {
        width: 30% !important;
      }

      .eventide-actor-data-table__header-cell:nth-child(2),
      .eventide-actor-data-table__cell:nth-child(2) {
        width: 22% !important;
      }

      .eventide-actor-data-table__header-cell:nth-child(3),
      .eventide-actor-data-table__cell:nth-child(3) {
        width: 22% !important;
      }

      .eventide-actor-data-table__header-cell:nth-child(4),
      .eventide-actor-data-table__cell:nth-child(4) {
        width: 26% !important;
      }
    }

    &--statuses {
      table-layout: auto !important; // Changed from fixed to auto

      .eventide-actor-data-table__header-cell:nth-child(1),
      .eventide-actor-data-table__cell:nth-child(1) {
        width: 100% !important; // Take all remaining space
      }

      .eventide-actor-data-table__header-cell:nth-child(2),
      .eventide-actor-data-table__cell:nth-child(2) {
        width: auto !important; // Controls auto-size
      }
    }
  }

  // Tab content styling for data tables - now after base definition
  // (Content styling moved to standalone .tab selector below to avoid duplication)
}

// Tab content styling (standalone to avoid duplication)
.tab {
  // Remove top margin from first data table after section headers
  .eventide-actor-data-section__header + .eventide-actor-data-table {
    margin-top: 0 !important;
  }

  // Biography tab theme-aware styling
  &.biography {
    .editor {
      height: 100%;
    }

     // Additional styling for the biography content wrapper
     .biography-content {
      width: 100% !important;
      height: 100% !important;
      padding: 0.5rem !important;
      box-sizing: border-box !important;
    }

    // Theme-aware text color for biography content
    &[data-biography-theme="light"] {
      color: #1e293b !important;

      .biography-content,
      prose-mirror {
        color: #1e293b !important;
      }

      // Ensure all text elements inherit the dark color
      p, div, span, h1, h2, h3, h4, h5, h6,
      ul, ol, li, blockquote, pre, code {
        color: #1e293b !important;
      }

      // Style links appropriately for light theme
      a {
        color: #2563eb !important; // Blue color for links in light theme
      }
    }


    // Default dark theme styling (for all other themes)
    &:not([data-biography-theme="light"]) {
      color: #fff !important;

      .biography-content,
      prose-mirror {
        color: #fff !important;
      }

      // Ensure all text elements inherit the light color
      p, div, span, h1, h2, h3, h4, h5, h6,
      ul, ol, li, blockquote, pre, code {
        color: #fff !important;
      }

      // Style links appropriately for dark themes
      a {
        color: #60a5fa !important; // Light blue color for links in dark themes
      }
    }


  }
}

.eventide-character-sheet input {
  @include mixins.grid-compliant-text-input;

  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  height: 2rem;
  border: 0.125rem inset colors.$universal-white;
  text-align: center;
  box-sizing: border-box !important;
  padding: 0.25rem !important;
  line-height: 1 !important;
}

.eventide-character-sheet input::selection {
  background: colors.$universal-white;
  color: colors.$universal-black;
}

// Header Ability Cards - Compact design inspired by status cards
.header-abilities {
  gap: 0.25rem;
  padding: 0.25rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%; // Match the height of the header content
}

.eventide-ability-card {
  display: flex;
  flex-direction: row; // Change to horizontal layout
  align-items: center;
  border-radius: 4px;
  border: 2px solid transparent;
  background: linear-gradient(
    135deg,
    rgb(0 0 0 / 30%) 0%,
    rgb(20 30 45 / 40%) 50%,
    rgb(0 0 0 / 30%) 100%
  );
  padding: 0.25rem 0.5rem; // Reduced vertical padding
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  height: 3rem; // Increased height to accommodate 16pt input font
  width: 100%; // Use full column width
  max-width: 100%; // Ensure it doesn't exceed column bounds
  min-width: 0; // Allow shrinking if needed

  // Base styling similar to input sections
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 4px;
    height: 100%;
    z-index: 1;
    transition: all 0.3s ease;
  }

  &__content {
    position: relative;
    z-index: 2;
    display: flex;
    flex-direction: row; // Horizontal layout
    align-items: center;
    width: 100%;
    gap: 0.5rem; // Increased gap for better overall spacing
    justify-content: space-between;
  }

  &__header {
    flex-shrink: 0;
    min-width: 2.5rem; // Reduced for abbreviations
    max-width: 3rem; // Reduced for abbreviations
    width: 3rem; // Reduced for abbreviations
  }

  &__label {
    font-size: 14pt; // Reduced to 14pt for better balance
    font-weight: 600;
    color: rgb(255 255 255 / 80%);
    text-transform: uppercase;
    letter-spacing: 0.3px;
    line-height: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    cursor: help; // Indicate that hover shows more info
    transition: color 0.2s ease;

    &:hover {
      color: rgb(255 255 255 / 100%);
    }
  }

  &__stats {
    display: flex;
    align-items: center;
    gap: 0.5rem; // Increased gap for better spacing
    flex-grow: 1;
  }

  &__input {
    // Force specific sizing for ability card inputs
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    width: 2.25rem !important;
    height: 1.75rem !important;
    min-height: 1.75rem !important;
    max-height: 1.75rem !important;
    padding: 0 !important;
    margin: 0 !important;
    font-size: 16pt !important;
    line-height: 1 !important;
    text-align: center !important;
    background: rgb(0 0 0 / 30%) !important;
    border: 1px solid rgb(255 255 255 / 20%) !important;
    border-radius: 3px !important;
    color: #fff !important;
    flex-shrink: 0 !important;
    box-sizing: border-box !important;
    vertical-align: middle !important;

    // Override any inherited styles
    font-family: inherit !important;
    font-weight: normal !important;
    letter-spacing: normal !important;
    text-transform: none !important;

    &:focus {
      border-color: rgb(255 255 255 / 50%) !important;
      box-shadow: 0 0 4px rgb(255 255 255 / 30%) !important;
      outline: none !important;
    }

    &:hover {
      border-color: rgb(255 255 255 / 40%) !important;
    }
  }

  &__total-button {
    // Force specific sizing for ability card buttons
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    width: 2.25rem !important;
    height: 1.75rem !important;
    min-height: 1.75rem !important;
    max-height: 1.75rem !important;
    min-width: 2.25rem !important;
    max-width: 2.25rem !important;
    padding: 0 !important;
    margin: 0 !important;
    border-radius: 3px !important;
    color: #fff !important;
    cursor: pointer !important;
    transition: all 0.2s ease !important;
    flex-shrink: 0 !important;
    font-size: 16pt !important;
    font-weight: bold !important;
    line-height: 1 !important;
    position: relative !important;
    overflow: hidden !important;
    box-sizing: border-box !important;
    vertical-align: middle !important;

    // Override any inherited button styles
    text-decoration: none !important;
    text-transform: none !important;
    letter-spacing: normal !important;

    // Default styling - will be overridden by ability-specific styles
    background: rgb(255 255 255 / 10%);
    border: 1px solid rgb(255 255 255 / 30%);
    text-shadow: 0 0 4px rgb(255 255 255 / 60%);
    box-shadow:
      0 0 6px rgb(255 255 255 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);

    &:active {
      transform: scale(0.95);
    }

    // Subtle animated background shimmer
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        rgb(255 255 255 / 20%),
        transparent
      );
      animation: button-shimmer 3s ease-in-out infinite;
    }
  }

  // Ability-specific button styling (after main button definition for proper specificity)
  &--acro &__total-button {
    background: rgb(191 68 0 / 30%);
    border: 1px solid rgb(191 68 0 / 50%);
    text-shadow: 0 0 4px rgb(191 68 0 / 80%);
    box-shadow:
      0 0 6px rgb(191 68 0 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
    animation: acro-glow 2s ease-in-out infinite alternate;

    &::before {
      background: linear-gradient(
        90deg,
        transparent,
        rgb(191 68 0 / 30%),
        transparent
      );
    }
  }

  &--phys &__total-button {
    background: rgb(168 3 3 / 30%);
    border: 1px solid rgb(168 3 3 / 50%);
    text-shadow: 0 0 4px rgb(168 3 3 / 80%);
    box-shadow:
      0 0 6px rgb(168 3 3 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
    animation: phys-glow 2s ease-in-out infinite alternate;

    &::before {
      background: linear-gradient(
        90deg,
        transparent,
        rgb(168 3 3 / 30%),
        transparent
      );
    }
  }

  &--fort &__total-button {
    background: rgb(45 104 45 / 30%);
    border: 1px solid rgb(45 104 45 / 50%);
    text-shadow: 0 0 4px rgb(45 104 45 / 80%);
    box-shadow:
      0 0 6px rgb(45 104 45 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
    animation: fort-glow 2s ease-in-out infinite alternate;

    &::before {
      background: linear-gradient(
        90deg,
        transparent,
        rgb(45 104 45 / 30%),
        transparent
      );
    }
  }

  &--will &__total-button {
    background: rgb(106 27 154 / 30%);
    border: 1px solid rgb(106 27 154 / 50%);
    text-shadow: 0 0 4px rgb(106 27 154 / 80%);
    box-shadow:
      0 0 6px rgb(106 27 154 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
    animation: will-glow 2s ease-in-out infinite alternate;

    &::before {
      background: linear-gradient(
        90deg,
        transparent,
        rgb(106 27 154 / 30%),
        transparent
      );
    }
  }

  &--wits &__total-button {
    background: rgb(14 67 128 / 30%);
    border: 1px solid rgb(14 67 128 / 50%);
    text-shadow: 0 0 4px rgb(14 67 128 / 80%);
    box-shadow:
      0 0 6px rgb(14 67 128 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
    animation: wits-glow 2s ease-in-out infinite alternate;

    &::before {
      background: linear-gradient(
        90deg,
        transparent,
        rgb(14 67 128 / 30%),
        transparent
      );
    }
  }

  // Hover states for ability buttons (moved after base definitions)
  &--acro &__total-button:hover {
    background: rgb(191 68 0 / 50%);
    border-color: rgb(191 68 0 / 70%);
    transform: scale(1.05);
    box-shadow:
      0 0 12px rgb(191 68 0 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }

  &--phys &__total-button:hover {
    background: rgb(168 3 3 / 50%);
    border-color: rgb(168 3 3 / 70%);
    transform: scale(1.05);
    box-shadow:
      0 0 12px rgb(168 3 3 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }

  &--fort &__total-button:hover {
    background: rgb(45 104 45 / 50%);
    border-color: rgb(45 104 45 / 70%);
    transform: scale(1.05);
    box-shadow:
      0 0 12px rgb(45 104 45 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }

  &--will &__total-button:hover {
    background: rgb(106 27 154 / 50%);
    border-color: rgb(106 27 154 / 70%);
    transform: scale(1.05);
    box-shadow:
      0 0 12px rgb(106 27 154 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }

  &--wits &__total-button:hover {
    background: rgb(14 67 128 / 50%);
    border-color: rgb(14 67 128 / 70%);
    transform: scale(1.05);
    box-shadow:
      0 0 12px rgb(14 67 128 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }

  &__status {
    // Force specific sizing for ability card status containers
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
    flex-shrink: 0 !important;
    width: 1.75rem !important;
    height: 1.75rem !important;
    min-height: 1.75rem !important;
    max-height: 1.75rem !important;
    min-width: 1.75rem !important;
    max-width: 1.75rem !important;
    padding: 0 !important;
    margin: 0 !important;
    border-radius: 3px !important;
    background: rgb(0 0 0 / 30%) !important;
    border: 1px solid rgb(255 255 255 / 20%) !important;
    transition: all 0.2s ease !important;
    box-sizing: border-box !important;
    vertical-align: middle !important;

    // Override any inherited styles
    position: relative !important;
    overflow: visible !important;

    &:hover {
      background: rgb(0 0 0 / 40%) !important;
      border-color: rgb(255 255 255 / 35%) !important;
    }
  }

  &__lock {
    // Force specific sizing for ability card lock icons
    font-size: 0.9rem !important; // Larger for better visibility in bigger container
    opacity: 0.9 !important;
    transition: all 0.2s ease !important;
    display: inline-block !important;
    line-height: 1 !important;
    vertical-align: middle !important;

    // Override any inherited icon styles
    margin: 0 !important;
    padding: 0 !important;
    text-decoration: none !important;
    text-transform: none !important;
    color: #ff6b6b;
    text-shadow: 0 0 4px rgb(255 107 107 / 60%);

    &:hover {
      opacity: 1 !important;
      transform: scale(1.15) !important;
    }
  }

  &__unlock {
    // Force specific sizing for ability card lock icons
    font-size: 0.9rem !important; // Larger for better visibility in bigger container
    opacity: 0.9 !important;
    transition: all 0.2s ease !important;
    display: inline-block !important;
    line-height: 1 !important;
    vertical-align: middle !important;

    // Override any inherited icon styles
    margin: 0 !important;
    padding: 0 !important;
    text-decoration: none !important;
    text-transform: none !important;
    color: #4CAF50;
    text-shadow: 0 0 4px rgb(76 175 80 / 60%);

    &:hover {
      opacity: 1 !important;
      transform: scale(1.15) !important;
    }
  }

  // Ability-specific styling with left border colors and button theming
  &--acro {
    &::before {
      background: colors.$acro;
    }
  }

  &--phys {
    &::before {
      background: colors.$phys;
    }
  }

  &--fort {
    &::before {
      background: colors.$fort;
    }
  }

  &--will {
    &::before {
      background: colors.$will;
    }
  }

  &--wits {
    &::before {
      background: colors.$wits;
    }
  }

  // Hover effects with themed backgrounds and patterns
  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgb(0 0 0 / 30%);

    &::before {
      width: 100%;
      opacity: 0.15;
    }
  }

  // Specific hover patterns for each ability
  &--acro:hover {
    background: linear-gradient(
      135deg,
      rgb(191 68 0 / 20%) 0%,
      rgb(191 68 0 / 10%) 50%,
      rgb(191 68 0 / 5%) 100%
    );

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23bf4400' fill-opacity='0.1'%3E%3Cpath d='M10 2l2 6h6l-5 4 2 6-5-4-5 4 2-6-5-4h6z'/%3E%3C/g%3E%3C/svg%3E");
      pointer-events: none;
      z-index: 1;
    }
  }

  &--phys:hover {
    background: linear-gradient(
      135deg,
      rgb(168 3 3 / 20%) 0%,
      rgb(168 3 3 / 10%) 50%,
      rgb(168 3 3 / 5%) 100%
    );

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23a80303' fill-opacity='0.1'%3E%3Crect x='8' y='2' width='4' height='16'/%3E%3Crect x='2' y='8' width='16' height='4'/%3E%3C/g%3E%3C/svg%3E");
      pointer-events: none;
      z-index: 1;
    }
  }

  &--fort:hover {
    background: linear-gradient(
      135deg,
      rgb(45 104 45 / 20%) 0%,
      rgb(45 104 45 / 10%) 50%,
      rgb(45 104 45 / 5%) 100%
    );

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%232d682d' fill-opacity='0.1'%3E%3Cpath d='M10 2L4 6v8l6 4 6-4V6z'/%3E%3C/g%3E%3C/svg%3E");
      pointer-events: none;
      z-index: 1;
    }
  }

  &--will:hover {
    background: linear-gradient(
      135deg,
      rgb(106 27 154 / 20%) 0%,
      rgb(106 27 154 / 10%) 50%,
      rgb(106 27 154 / 5%) 100%
    );

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%236a1b9a' fill-opacity='0.1'%3E%3Ccircle cx='10' cy='10' r='8'/%3E%3Ccircle cx='10' cy='10' r='4'/%3E%3C/g%3E%3C/svg%3E");
      pointer-events: none;
      z-index: 1;
    }
  }

  &--wits:hover {
    background: linear-gradient(
      135deg,
      rgb(14 67 128 / 20%) 0%,
      rgb(14 67 128 / 10%) 50%,
      rgb(14 67 128 / 5%) 100%
    );

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%230e4380' fill-opacity='0.1'%3E%3Cpath d='M10 2l8 6-8 2-8-2z'/%3E%3Cpath d='M10 12l8 6-8-2-8 2z'/%3E%3C/g%3E%3C/svg%3E");
      pointer-events: none;
      z-index: 1;
    }
  }
}

// Animations for ability card total buttons - each with their own color
@keyframes acro-glow {
  0% {
    box-shadow:
      0 0 6px rgb(191 68 0 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 10px rgb(191 68 0 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }
}

@keyframes phys-glow {
  0% {
    box-shadow:
      0 0 6px rgb(168 3 3 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 10px rgb(168 3 3 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }
}

@keyframes fort-glow {
  0% {
    box-shadow:
      0 0 6px rgb(45 104 45 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 10px rgb(45 104 45 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }
}

@keyframes will-glow {
  0% {
    box-shadow:
      0 0 6px rgb(106 27 154 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 10px rgb(106 27 154 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }
}

@keyframes wits-glow {
  0% {
    box-shadow:
      0 0 6px rgb(14 67 128 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 10px rgb(14 67 128 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }
}

@keyframes button-shimmer {
  0% {
    left: -100%;
  }

  50% {
    left: 100%;
  }

  100% {
    left: 100%;
  }
}

// Fix for controls dropdown z-index issues
.controls-dropdown {
  z-index: 9999 !important;
}

.eventide-ability-acro-box {
  background-color: colors.$acro-transparent;
  border-left: 0.3125rem solid colors.$acro;
}

.eventide-ability-phys-box {
  background-color: colors.$phys-transparent;
  border-left: 0.3125rem solid colors.$phys;
}

.eventide-ability-fort-box {
  background-color: colors.$fort-transparent;
  border-left: 0.3125rem solid colors.$fort;
}

.eventide-ability-will-box {
  background-color: colors.$will-transparent;
  border-left: 0.3125rem solid colors.$will;
}

.eventide-ability-wits-box {
  background-color: colors.$wits-transparent;
  border-left: 0.3125rem solid colors.$wits;
}

.eventide-actor__profile-img {
  border-radius: 40px;
  border: 3px solid colors.$universal-white;
  width: 180px;
  height: 180px;
  box-shadow:
    0 0 20px rgb(255 255 255 / 30%),
    inset 0 0 20px rgb(0 0 0 / 20%);
  transition: all 0.3s ease;
  position: relative;
  flex-shrink: 0;

  // Add frame effect
  &::before {
    content: '';
    position: absolute;
    inset: -6px;
    border: 1px solid rgb(255 255 255 / 20%);
    border-radius: 46px;
    z-index: -1;
  }

  // Background styling is now handled at the top of the file

  &:hover {
    border: 3px solid colors.$white-text-glow;
    box-shadow:
      0 0 30px colors.$white-text-glow,
      inset 0 0 20px rgb(0 0 0 / 10%);
    transform: scale(1.02);
  }

  // Disabled state when transformed
  &--disabled {
    opacity: 0.6;
    cursor: not-allowed;
    filter: grayscale(0.3);

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background: rgb(0 0 0 / 30%);
      border-radius: 40px;
      pointer-events: none;
    }

    &:hover {
      border: 3px solid colors.$universal-white;
      box-shadow:
        0 0 20px rgb(255 255 255 / 30%),
        inset 0 0 20px rgb(0 0 0 / 20%);
      transform: none;
    }
  }
}

// .eventide-actor__character-name {
//   font-size: 2.5rem !important;
//   font-weight: bold;
//   color: colors.$universal-white;
//   height: 5rem !important;
//   min-height: 5rem;
//   padding: 0.5rem 1rem;
//   text-align: center !important;
//   background: linear-gradient(
//     135deg,
//     rgb(0 0 0 / 30%) 0%,
//     rgb(20 30 45 / 40%) 50%,
//     rgb(0 0 0 / 30%) 100%
//   );
//   border: 2px inset colors.$universal-white !important;
//   border-radius: 8px;
//   text-shadow:
//     0 0 10px rgb(255 255 255 / 50%),
//     2px 2px 4px rgb(0 0 0 / 80%);
//   box-shadow: inset 0 2px 4px rgb(0 0 0 / 30%);
//   margin-bottom: 0;

//   &:focus {
//     box-shadow:
//       inset 0 2px 4px rgb(0 0 0 / 30%),
//       0 0 15px colors.$white-text-glow;
//     text-shadow:
//       0 0 15px colors.$white-text-glow,
//       2px 2px 4px rgb(0 0 0 / 80%);
//   }
// }

// Complete toggle group implementation for actor header: can be used anywhere on the actor sheet
.eventide-actor__toggle-group {
  @include mixins.grid-compliant-toggle-group;

  // Override default margins for header usage
  margin: 0.5rem 0; // MAGICNUMBER replace with token eventually

  // Label styling is now handled at the top of the file

  // Alternative: target any label with the class
  label.eventide-actor__toggle-label {
    font-size: 0.8rem !important;
  }

  // Style the toggle switch wrapper
  .toggle-switch-wrapper {
    position: relative;

    // Style the actual toggle input
    input[type="checkbox"] {
      @include mixins.grid-compliant-toggle-switch;
    }

    // Style the toggle display element
    .toggle-switch-display {
      cursor: pointer;

      &:hover {
        opacity: 0.9;
      }
    }
  }

  // Variant for compact header usage
  &--compact {
    margin: 0.25rem 0;
    padding: 0.25rem 0.5rem;

    // Label styling is now handled at the top of the file

    .toggle-switch-wrapper {
      width: 2rem;
      flex: 0 0 2rem;
    }
  }

  // Variant for inline usage in headers
  &--inline {
    margin: 0;
    padding: 0;

    // Label styling is now handled at the top of the file
  }
}

// Enhanced header styling for game design feel
.sheet-header--actor {
  background: linear-gradient(
    135deg,
    rgb(20 30 45 / 95%) 0%,
    rgb(30 40 60 / 90%) 50%,
    rgb(25 35 50 / 95%) 100%
  );
  border: 2px solid colors.$universal-white;
  border-radius: 12px;
  box-shadow:
    0 4px 20px rgb(0 0 0 / 60%),
    inset 0 1px 0 rgb(255 255 255 / 10%);
  padding: 1rem;
  margin-bottom: 0.5rem;
  position: relative;

  // Add subtle animated glow
  &::before {
    content: '';
    position: absolute;
    inset: -2px;
    background: linear-gradient(45deg,
      colors.$universal-white,
      colors.$white-text-glow,
      colors.$universal-white
    );
    border-radius: 14px;
    z-index: -1;
    opacity: 0.3;
    animation: header-glow 3s ease-in-out infinite alternate;
  }

  // Tighten up the main grid
  .grid {
    gap: 0.75rem;
    align-items: flex-start;
    margin-bottom: 0;
  }

  // Ensure header fields align properly
  .header-fields {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    height: 100%;
    justify-content: space-between;
  }

  // Align the left column content
  .grid-span-2 {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    height: 100%;
  }
}

@keyframes header-glow {
  0% { opacity: 0.2; }
  100% { opacity: 0.4; }
}

// Enhanced resource boxes with game design
.resource {
  background: linear-gradient(
    135deg,
    rgb(30 40 60 / 80%) 0%,
    rgb(20 30 45 / 90%) 100%
  );
  border: 1px solid rgb(255 255 255 / 30%);
  border-radius: 8px;
  box-shadow:
    0 2px 8px rgb(0 0 0 / 40%),
    inset 0 1px 0 rgb(255 255 255 / 10%);
  transition: all 0.2s ease;

  &:hover {
    border-color: colors.$white-text-glow;
    box-shadow:
      0 4px 12px rgb(0 0 0 / 50%),
      0 0 8px rgb(255 255 255 / 20%);
  }

  // Resource label and value styling is now handled at the top of the file

  input {
    background: rgb(0 0 0 / 30%) !important;
    border: 1px solid rgb(255 255 255 / 20%) !important;
    color: colors.$universal-white !important;
    text-shadow: 1px 1px 2px rgb(0 0 0 / 80%);

    &:focus {
      border-color: colors.$white-text-glow !important;
      box-shadow: 0 0 8px rgb(255 255 255 / 30%) !important;
    }
  }
}

// Tighten up resource grids
.resources {
  margin-bottom: 0;

  &.grid {
    gap: 0.75rem;
  }
}

// Add status indicators section
.eventide-header__status-bar {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 0.75rem;
  width: 100%;
  margin-top: 0.5rem;
  padding: 0.5rem 1rem;
  background: rgb(0 0 0 / 30%);
  border-radius: 8px;
  border: 1px solid rgb(255 255 255 / 15%);
  box-shadow: inset 0 1px 3px rgb(0 0 0 / 20%);
  position: relative; // For arrow positioning

  // Make it horizontally scrollable but hide scrollbar
  overflow: auto hidden;
  flex-wrap: nowrap; // Prevent wrapping

  // Smooth scrolling
  scroll-behavior: smooth;

  // Hide scrollbars completely
  scrollbar-width: none; // Firefox
  -ms-overflow-style: none; // IE/Edge

  &::-webkit-scrollbar {
    display: none; // Chrome/Safari/Opera
  }

  // Grab cursor to indicate draggable
  cursor: grab;

  &:active {
    cursor: grabbing;
  }

  // Directional arrow indicators - positioned relative to the status bar container
  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 0;
    height: 0;
    border-style: solid;
    opacity: 0;
    transition: opacity 0.3s ease, border-color 0.2s ease, transform 0.2s ease;
    pointer-events: none;
    z-index: 10; // Higher z-index to appear above content
    cursor: pointer;
  }

  // Left arrow (when can scroll left) - positioned dynamically based on scroll
  &::before {
    left: var(--arrow-left-position, 0.5rem);
    border-width: 8px 12px 8px 0;
    border-color: transparent rgb(255 255 255 / 50%) transparent transparent;
  }

  // Right arrow (when can scroll right) - positioned dynamically based on scroll
  &::after {
    left: var(--arrow-right-position, calc(100% - 2rem));
    border-width: 8px 0 8px 12px;
    border-color: transparent transparent transparent rgb(255 255 255 / 50%);
  }

  // Show arrows when scrollable (these classes will be added via JavaScript)
  &.scrollable-left::before {
    opacity: 1;
    pointer-events: auto;

    &:hover {
      border-color: transparent rgb(255 255 255 / 100%) transparent transparent;
      transform: translateY(-50%) scale(1.2);
    }
  }

  &.scrollable-right::after {
    opacity: 1;
    pointer-events: auto;

    &:hover {
      border-color: transparent transparent transparent rgb(255 255 255 / 100%);
      transform: translateY(-50%) scale(1.2);
    }
  }

  // If no status indicators, hide the bar
  &:empty {
    display: none;
  }

  // Child card sizing is now handled at the top of the file
}

.eventide-header__status-indicator {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  padding: 0.25rem 0.5rem;
  background: rgb(255 255 255 / 10%);
  border-radius: 6px;
  font-size: 0.8rem;
  color: colors.$universal-white;
  font-weight: 500;
  text-shadow: 1px 1px 2px rgb(0 0 0 / 80%);
  border: 1px solid rgb(255 255 255 / 10%);
  transition: all 0.2s ease;

  // Flex properties to prevent shrinking
  flex: 0 0 auto;
  white-space: nowrap;

  i {
    font-size: 0.85rem;
    opacity: 0.9;
  }

  &:hover {
    background: rgb(255 255 255 / 15%);
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgb(0 0 0 / 20%);
  }

  &--active {
    background: rgb(77 148 255 / 40%);
    border: 1px solid rgb(77 148 255 / 60%);
    color: #fff;

    &:hover {
      background: rgb(77 148 255 / 50%);
    }
  }

  &--warning {
    background: rgb(255 193 7 / 40%);
    border: 1px solid rgb(255 193 7 / 60%);
    color: #fff;

    &:hover {
      background: rgb(255 193 7 / 50%);
    }
  }

  &--danger {
    background: rgb(220 53 69 / 40%);
    border: 1px solid rgb(220 53 69 / 60%);
    color: #fff;

    &:hover {
      background: rgb(220 53 69 / 50%);
    }
  }
}

// Health Status Card - matches transformation card styling
.eventide-health-card {
  display: flex;
  align-items: center;
  margin: 0;
  padding: 0.5rem 0.75rem;
  border-radius: 6px;
  border: 2px solid rgb(220 53 69 / 60%);
  background: linear-gradient(
    135deg,
    rgb(220 53 69 / 15%) 0%,
    rgb(139 0 0 / 80%) 50%,
    rgb(220 53 69 / 10%) 100%
  );
  box-shadow:
    0 0 10px rgb(220 53 69 / 30%),
    inset 0 1px 0 rgb(255 255 255 / 10%);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  flex: 0 0 auto;
  max-width: 20rem;

  // Animated danger glow effect
  &::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -50%;
    width: 200%;
    height: calc(100% + 4px);
    background: linear-gradient(
      90deg,
      transparent,
      rgb(220 53 69 / 40%),
      transparent
    );
    animation: danger-glow 3s ease-in-out infinite;
    z-index: 0;
  }

  &__header {
    display: flex;
    align-items: center;
    width: 100%;
    position: relative;
    z-index: 1;
  }

  &__icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.75rem;
    height: 1.75rem;
    border-radius: 50%;
    background: rgb(220 53 69 / 40%);
    border: 2px solid rgb(220 53 69 / 70%);
    margin-right: 0.75rem;
    flex-shrink: 0;

    i {
      font-size: 0.9rem;
      color: #fff;
      text-shadow: 0 0 6px rgb(220 53 69 / 80%);
      animation: heartbeat 2s ease-in-out infinite;
    }
  }

  &__info {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-width: 0;
  }

  &__label {
    font-size: 0.7rem;
    font-weight: 600;
    color: rgb(255 255 255 / 90%);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 0.125rem;
    line-height: 1;
  }

  &__details {
    font-size: 0.9rem;
    font-weight: bold;
    color: #fff;
    text-shadow: 0 0 6px rgb(220 53 69 / 60%);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    line-height: 1.2;
    font-family: monospace; // Use monospace for numbers
  }

  &__warning {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 4px;
    background: rgb(255 193 7 / 30%);
    border: 1px solid rgb(255 193 7 / 60%);
    color: #fff;
    margin-left: 0.75rem;
    flex-shrink: 0;

    i {
      font-size: 0.75rem;
      animation: pulse 1.5s ease-in-out infinite;
    }
  }

  // Critical health variant (default)
  &--critical {
    // Already styled above - this is the base critical state

    // Add pulsing border for extra urgency
    animation: critical-border 2s ease-in-out infinite;
  }

  // Potential future variants moved to end of file for specificity
}

// Animations for health card
@keyframes danger-glow {
  0%, 100% {
    left: -50%;
    opacity: 0;
  }

  50% {
    left: 50%;
    opacity: 0.8;
  }
}

@keyframes wounded-glow {
  0%, 100% {
    left: -50%;
    opacity: 0;
  }

  50% {
    left: 50%;
    opacity: 0.6;
  }
}

@keyframes heartbeat {
  0%, 100% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }

  50% {
    opacity: 0.5;
  }
}

@keyframes critical-border {
  0%, 100% {
    border-color: rgb(220 53 69 / 60%);
  }

  50% {
    border-color: rgb(220 53 69 / 90%);
  }
}

// Effects Status Card - matches transformation and health card styling
.eventide-effects-card {
  display: flex;
  align-items: center;
  margin: 0;
  padding: 0.5rem 0.75rem;
  border-radius: 6px;
  border: 2px solid rgb(255 193 7 / 60%);
  background: linear-gradient(
    135deg,
    rgb(255 193 7 / 15%) 0%,
    rgb(184 134 11 / 80%) 50%,
    rgb(255 193 7 / 10%) 100%
  );
  box-shadow:
    0 0 10px rgb(255 193 7 / 30%),
    inset 0 1px 0 rgb(255 255 255 / 10%);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  flex: 0 0 auto;
  max-width: 20rem;

  // Animated golden glow effect
  &::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -50%;
    width: 200%;
    height: calc(100% + 4px);
    background: linear-gradient(
      90deg,
      transparent,
      rgb(255 215 0 / 40%),
      transparent
    );
    animation: golden-glow 3.5s ease-in-out infinite;
    z-index: 0;
  }

  &__header {
    display: flex;
    align-items: center;
    width: 100%;
    position: relative;
    z-index: 1;
  }

  &__icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.75rem;
    height: 1.75rem;
    border-radius: 50%;
    background: rgb(255 193 7 / 40%);
    border: 2px solid rgb(255 193 7 / 70%);
    margin-right: 0.75rem;
    flex-shrink: 0;

    i {
      font-size: 0.9rem;
      color: #fff;
      text-shadow: 0 0 6px rgb(255 193 7 / 80%);
      animation: golden-sparkle 2.5s ease-in-out infinite;
    }
  }

  &__info {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-width: 0;
  }

  &__label {
    font-size: 0.7rem;
    font-weight: 600;
    color: rgb(255 255 255 / 90%);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 0.125rem;
    line-height: 1;
  }

  &__details {
    font-size: 0.9rem;
    font-weight: bold;
    color: #fff;
    text-shadow: 0 0 6px rgb(255 193 7 / 60%);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    line-height: 1.2;
  }

  &__indicator {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 4px;
    background: rgb(255 215 0 / 40%);
    border: 1px solid rgb(255 215 0 / 70%);
    color: #fff;
    margin-left: 0.75rem;
    flex-shrink: 0;

    i {
      font-size: 0.75rem;
      animation: golden-twinkle 1.8s ease-in-out infinite;
    }
  }

  // Active effects variant (default)
  &--active {
    // Already styled above - this is the base active state

    // Add subtle golden shimmer
    animation: golden-shimmer 4s ease-in-out infinite;
  }

  // Potential future variants moved to end of file for specificity

  // Harmful effects variant moved to end of file for specificity
}

// Animations for effects card
@keyframes golden-glow {
  0%, 100% {
    left: -50%;
    opacity: 0;
  }

  50% {
    left: 50%;
    opacity: 0.7;
  }
}

@keyframes beneficial-glow {
  0%, 100% {
    left: -50%;
    opacity: 0;
  }

  50% {
    left: 50%;
    opacity: 0.6;
  }
}

@keyframes harmful-glow {
  0%, 100% {
    left: -50%;
    opacity: 0;
  }

  50% {
    left: 50%;
    opacity: 0.8;
  }
}

@keyframes golden-sparkle {
  0%, 100% {
    transform: scale(1) rotate(0deg);
    opacity: 1;
  }

  25% {
    transform: scale(1.1) rotate(90deg);
    opacity: 0.8;
  }

  50% {
    transform: scale(1) rotate(180deg);
    opacity: 1;
  }

  75% {
    transform: scale(1.1) rotate(270deg);
    opacity: 0.8;
  }
}

@keyframes golden-twinkle {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }

  50% {
    opacity: 0.3;
    transform: scale(0.8);
  }
}

@keyframes golden-shimmer {
  0%, 100% {
    box-shadow:
      0 0 10px rgb(255 193 7 / 30%),
      inset 0 1px 0 rgb(255 255 255 / 10%);
  }

  50% {
    box-shadow:
      0 0 15px rgb(255 193 7 / 50%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
  }
}

// Cursed Items Card - matches other status card styling
.eventide-cursed-card {
  display: flex;
  align-items: center;
  margin: 0;
  padding: 0.5rem 0.75rem;
  border-radius: 6px;
  border: 2px solid rgb(139 0 139 / 60%);
  background: linear-gradient(
    135deg,
    rgb(139 0 139 / 15%) 0%,
    rgb(75 0 75 / 80%) 50%,
    rgb(139 0 139 / 10%) 100%
  );
  box-shadow:
    0 0 10px rgb(139 0 139 / 30%),
    inset 0 1px 0 rgb(255 255 255 / 10%);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  flex: 0 0 auto;
  max-width: 20rem;

  // Animated ominous glow effect
  &::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -50%;
    width: 200%;
    height: calc(100% + 4px);
    background: linear-gradient(
      90deg,
      transparent,
      rgb(139 0 139 / 40%),
      transparent
    );
    animation: ominous-glow 4s ease-in-out infinite;
    z-index: 0;
  }

  &__header {
    display: flex;
    align-items: center;
    width: 100%;
    position: relative;
    z-index: 1;
  }

  &__icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.75rem;
    height: 1.75rem;
    border-radius: 50%;
    background: rgb(139 0 139 / 40%);
    border: 2px solid rgb(139 0 139 / 70%);
    margin-right: 0.75rem;
    flex-shrink: 0;

    i {
      font-size: 0.9rem;
      color: #fff;
      text-shadow: 0 0 6px rgb(139 0 139 / 80%);
      animation: ominous-float 3s ease-in-out infinite;
    }
  }

  &__info {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-width: 0;
  }

  &__label {
    font-size: 0.7rem;
    font-weight: 600;
    color: rgb(255 255 255 / 90%);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 0.125rem;
    line-height: 1;
  }

  &__details {
    font-size: 0.9rem;
    font-weight: bold;
    color: #fff;
    text-shadow: 0 0 6px rgb(139 0 139 / 60%);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    line-height: 1.2;
  }

  &__warning {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 4px;
    background: rgb(220 53 69 / 40%);
    border: 1px solid rgb(220 53 69 / 70%);
    color: #fff;
    margin-left: 0.75rem;
    flex-shrink: 0;

    i {
      font-size: 0.75rem;
      animation: ominous-pulse 2s ease-in-out infinite;
    }
  }

  // Warning variant (default)
  &--warning {
    // Already styled above - this is the base warning state

    // Add subtle cursed shimmer
    animation: cursed-shimmer 5s ease-in-out infinite;
  }

  // Potential future variants moved to end of file for specificity
}

// Animations for cursed card
@keyframes ominous-glow {
  0%, 100% {
    left: -50%;
    opacity: 0;
  }

  50% {
    left: 50%;
    opacity: 0.6;
  }
}

@keyframes deadly-glow {
  0%, 100% {
    left: -50%;
    opacity: 0;
  }

  50% {
    left: 50%;
    opacity: 0.8;
  }
}

@keyframes ominous-float {
  0%, 100% {
    transform: translateY(0) scale(1);
  }

  50% {
    transform: translateY(-2px) scale(1.05);
  }
}

@keyframes ominous-pulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }

  50% {
    opacity: 0.6;
    transform: scale(0.9);
  }
}

@keyframes cursed-shimmer {
  0%, 100% {
    box-shadow:
      0 0 10px rgb(139 0 139 / 30%),
      inset 0 1px 0 rgb(255 255 255 / 10%);
  }

  50% {
    box-shadow:
      0 0 20px rgb(139 0 139 / 50%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
  }
}

// Note: Data table system moved earlier for proper CSS specificity ordering

// Gear tab system is now handled by the erps-tabs component

// Merge with existing light theme styling above to avoid duplication

// Section headers for data tables
.eventide-actor-data-section {
  &__header {
    @include themes.apply-all-themes('section-theme');

    font-family: var(--erps-ui-font) !important;
    font-size: 16pt !important;
    font-weight: 700 !important;
    color: var(--theme-text, #fff) !important;
    text-transform: uppercase !important;
    letter-spacing: 1px !important;
    text-align: center !important;
    padding: 1rem !important;
    margin: 1rem 0 0.5rem !important;

    @include themes.themed-gradient-background;
    @include themes.themed-border;
    @include themes.themed-glow-shadow;

    border-radius: 8px !important;
    position: relative !important;
    overflow: hidden !important;
    text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important;

    &::before {
      content: '' !important;
      position: absolute !important;
      top: 0 !important;
      left: -100% !important;
      width: 200% !important;
      height: 100% !important;
      background: linear-gradient(90deg,
        transparent,
        rgb(255 255 255 / 15%),
        transparent) !important;
      animation: section-header-glow 5s ease-in-out infinite !important;
      z-index: 1 !important;
    }

    &::after {
      content: '' !important;
      position: absolute !important;
      top: 50% !important;
      left: 1rem !important;
      right: 1rem !important;
      height: 1px !important;
      background: linear-gradient(90deg,
        transparent,
        rgb(255 255 255 / 30%),
        transparent) !important;
      transform: translateY(-50%) !important;
      z-index: 0 !important;
    }
  }
}

// Control buttons for data tables
.eventide-actor-data-control {
  display: inline-flex !important;
  align-items: center !important;
  justify-content: center !important;
  width: 2rem !important;
  height: 2rem !important;
  min-width: 2rem !important;
  min-height: 2rem !important;
  border-radius: 6px !important;
  background: rgb(255 255 255 / 10%) !important;
  border: 1px solid rgb(255 255 255 / 20%) !important;
  color: var(--theme-text, #fff) !important;
  cursor: pointer !important;
  transition: all 0.2s ease !important;
  font-size: 12pt !important;
  text-decoration: none !important;
  position: relative !important;
  overflow: hidden !important;
  flex-shrink: 0 !important;

  &::before {
    content: '' !important;
    position: absolute !important;
    top: 50% !important;
    left: 50% !important;
    width: 0 !important;
    height: 0 !important;
    background: radial-gradient(circle, var(--theme-light, rgb(59 130 246 / 70%)) 0%, transparent 70%) !important;
    border-radius: 50% !important;
    transform: translate(-50%, -50%) !important;
    transition: all 0.3s ease !important;
    z-index: 0 !important;
  }

  // i selector moved to high specificity section at end of file

  &:hover {
    background: var(--theme-primary, rgb(30 58 138 / 90%)) !important;
    border-color: var(--theme-light, rgb(59 130 246 / 70%)) !important;
    box-shadow: 0 0 12px var(--theme-glow, rgb(59 130 246 / 60%)) !important;
    transform: translateY(-1px) scale(1.05) !important;

    &::before {
      width: 100% !important;
      height: 100% !important;
    }
  }

  &:active {
    transform: translateY(0) scale(0.95) !important;
  }

  // Button variants
  &--create {
    background: linear-gradient(135deg, rgb(34 197 94 / 20%), rgb(21 128 61 / 30%)) !important;
    border-color: rgb(34 197 94 / 40%) !important;

    &:hover {
      background: rgb(21 128 61 / 80%) !important;
      border-color: rgb(34 197 94 / 80%) !important;
      box-shadow: 0 0 12px rgb(34 197 94 / 60%) !important;
    }
  }

  &--edit {
    background: linear-gradient(135deg, rgb(59 130 246 / 20%), rgb(30 58 138 / 30%)) !important;
    border-color: rgb(59 130 246 / 40%) !important;

    &:hover {
      background: rgb(30 58 138 / 80%) !important;
      border-color: rgb(59 130 246 / 80%) !important;
      box-shadow: 0 0 12px rgb(59 130 246 / 60%) !important;
    }
  }

  &--delete {
    background: linear-gradient(135deg, rgb(239 68 68 / 20%), rgb(185 28 28 / 30%)) !important;
    border-color: rgb(239 68 68 / 40%) !important;

    &:hover {
      background: rgb(185 28 28 / 80%) !important;
      border-color: rgb(239 68 68 / 80%) !important;
      box-shadow: 0 0 12px rgb(239 68 68 / 60%) !important;
    }
  }

  &--equip {
    background: linear-gradient(135deg, rgb(217 119 6 / 20%), rgb(180 83 9 / 30%)) !important;
    border-color: rgb(217 119 6 / 40%) !important;

    &:hover {
      background: rgb(180 83 9 / 80%) !important;
      border-color: rgb(217 119 6 / 80%) !important;
      box-shadow: 0 0 12px rgb(217 119 6 / 60%) !important;
    }
  }

  &--increment, &--decrement {
    background: linear-gradient(135deg, rgb(147 51 234 / 20%), rgb(88 28 135 / 30%)) !important;
    border-color: rgb(147 51 234 / 40%) !important;

    &:hover {
      background: rgb(88 28 135 / 80%) !important;
      border-color: rgb(147 51 234 / 80%) !important;
      box-shadow: 0 0 12px rgb(147 51 234 / 60%) !important;
    }
  }

  // Special states
  &--cursed {
    background: linear-gradient(135deg, rgb(138 43 226 / 30%), rgb(75 0 130 / 40%)) !important;
    border-color: rgb(138 43 226 / 60%) !important;
    animation: cursed-pulse 3s ease-in-out infinite !important;

    &:hover {
      background: rgb(75 0 130 / 80%) !important;
      border-color: rgb(138 43 226 / 80%) !important;
      box-shadow: 0 0 15px rgb(138 43 226 / 80%) !important;
    }
  }

  &--disabled {
    opacity: 0.4 !important;
    cursor: not-allowed !important;
    pointer-events: none !important;
    background: rgb(100 100 100 / 20%) !important;
    border-color: rgb(100 100 100 / 30%) !important;
  }

  &--unequipped {
    opacity: 0.7 !important;
    background: linear-gradient(135deg, rgb(100 100 100 / 20%), rgb(60 60 60 / 30%)) !important;
    border-color: rgb(100 100 100 / 40%) !important;
  }
}

// Create button with text (for headers)
.eventide-actor-data-create {
  display: inline-flex !important;
  align-items: center !important;
  gap: 0.5rem !important;
  padding: 0.5rem 1rem !important;
  border-radius: 6px !important;
  background: linear-gradient(135deg, rgb(34 197 94 / 20%), rgb(21 128 61 / 30%)) !important;
  border: 1px solid rgb(34 197 94 / 40%) !important;
  color: var(--theme-text, #fff) !important;
  cursor: pointer !important;
  transition: all 0.2s ease !important;
  font-family: var(--erps-ui-font) !important;
  font-size: 12pt !important;
  font-weight: 600 !important;
  text-decoration: none !important;
  text-transform: uppercase !important;
  letter-spacing: 0.5px !important;

  &:hover {
    background: rgb(21 128 61 / 80%) !important;
    border-color: rgb(34 197 94 / 80%) !important;
    box-shadow: 0 0 12px rgb(34 197 94 / 60%) !important;
    transform: translateY(-1px) !important;
  }

  &:active {
    transform: translateY(0) !important;
  }
}

// Animations for data tables
@keyframes table-header-glow {
  0%, 100% { left: -100%; }
  50% { left: 100%; }
}

@keyframes section-header-glow {
  0%, 100% { left: -100%; }
  50% { left: 100%; }
}

@keyframes cursed-pulse {
  0%, 100% {
    box-shadow: 0 0 5px rgb(138 43 226 / 40%);
  }

  50% {
    box-shadow: 0 0 20px rgb(138 43 226 / 80%),
                inset 0 0 10px rgb(138 43 226 / 30%);
  }
}

@keyframes pattern-shift {
  0% { background-position: 0 0, 0 0; }
  100% { background-position: 20px 20px, 0 0; }
}

// Balanced background animation keyframes for themed character sheet backgrounds
@keyframes gentle-float {
  0%, 100% {
    background-position: 0 0, 0 0, 0 0;
  }

  50% {
    background-position: 25px 25px, 60px 40px, 0 0;
  }
}

@keyframes gentle-pulse {
  0%, 100% {
    background-position: 0 0, 0 0, 0 0;
  }

  50% {
    background-position: 20px 20px, 50px 50px, 0 0;
  }
}

@keyframes gentle-grow {
  0%, 100% {
    background-position: 0 0, 0 0, 0 0;
  }

  50% {
    background-position: 22px 22px, 45px 80px, 0 0;
  }
}

@keyframes subtle-shift {
  0% {
    background-position: 0 0, 0 0, 0 0;
  }

  100% {
    background-position: 200px 200px, 75px 75px, 0 0;
  }
}

@keyframes mystic-glow {
  0%, 100% {
    background-position: 0 0, 0 0, 0 0;
  }

  50% {
    background-position: 30px 30px, 80px 50px, 0 0;
  }
}

@keyframes gentle-breeze {
  0%, 100% {
    background-position: 0 0, 0 0, 0 0;
  }

  50% {
    background-position: 35px 35px, 70px 45px, 0 0;
  }
}

// ===================================
// HIGH SPECIFICITY SELECTORS
// ===================================
// These selectors are placed at the end to resolve specificity conflicts

// Cursed transformation variant (moved here for specificity)
.eventide-transformation-card--cursed {
  border-color: rgb(138 43 226 / 80%);
  background: linear-gradient(
    135deg,
    rgb(138 43 226 / 20%) 0%,
    rgb(75 0 130 / 80%) 50%,
    rgb(138 43 226 / 15%) 100%
  );
  box-shadow:
    0 0 15px rgb(138 43 226 / 40%),
    inset 0 1px 0 rgb(255 255 255 / 10%);

  &::before {
    background: linear-gradient(
      90deg,
      transparent,
      rgb(138 43 226 / 40%), // More subtle
      transparent
    );
    animation: cursed-transformation-glow 3s ease-in-out infinite; // Slower
  }

  // Cursed drag hover state
  &[draggable="true"]:hover {
    transform: translateY(-2px);
    box-shadow:
      0 0 20px rgb(138 43 226 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 15%),
      0 4px 8px rgb(0 0 0 / 20%);
    border-color: rgb(138 43 226 / 100%);
  }

  .eventide-transformation-card__icon {
    background: rgb(138 43 226 / 40%);
    border-color: rgb(138 43 226 / 80%);

    i {
      color: #fff;
      text-shadow: 0 0 6px rgb(138 43 226 / 80%);
    }
  }

  .eventide-transformation-card__name {
    text-shadow: 0 0 6px rgb(138 43 226 / 60%);
  }

  .eventide-transformation-card__locked {
    background: rgb(138 43 226 / 30%);
    border-color: rgb(138 43 226 / 60%);
    color: rgb(255 255 255 / 80%);
  }
}

// Wounded health card variant (moved here for specificity)
.eventide-health-card--wounded {
  border-color: rgb(255 193 7 / 60%);
  background: linear-gradient(
    135deg,
    rgb(255 193 7 / 15%) 0%,
    rgb(184 134 11 / 80%) 50%,
    rgb(255 193 7 / 10%) 100%
  );
  box-shadow:
    0 0 10px rgb(255 193 7 / 30%),
    inset 0 1px 0 rgb(255 255 255 / 10%);

  &::before {
    background: linear-gradient(
      90deg,
      transparent,
      rgb(255 193 7 / 40%),
      transparent
    );
    animation: wounded-glow 4s ease-in-out infinite;
  }

  .eventide-health-card__icon {
    background: rgb(255 193 7 / 40%);
    border-color: rgb(255 193 7 / 70%);

    i {
      text-shadow: 0 0 6px rgb(255 193 7 / 80%);
    }
  }

  .eventide-health-card__details {
    text-shadow: 0 0 6px rgb(255 193 7 / 60%);
  }
}

// Beneficial effects card variant (moved here for specificity)
.eventide-effects-card--beneficial {
  border-color: rgb(40 167 69 / 60%);
  background: linear-gradient(
    135deg,
    rgb(40 167 69 / 15%) 0%,
    rgb(25 135 84 / 80%) 50%,
    rgb(40 167 69 / 10%) 100%
  );
  box-shadow:
    0 0 10px rgb(40 167 69 / 30%),
    inset 0 1px 0 rgb(255 255 255 / 10%);

  &::before {
    background: linear-gradient(
      90deg,
      transparent,
      rgb(40 167 69 / 40%),
      transparent
    );
    animation: beneficial-glow 4s ease-in-out infinite;
  }

  .eventide-effects-card__icon {
    background: rgb(40 167 69 / 40%);
    border-color: rgb(40 167 69 / 70%);

    i {
      text-shadow: 0 0 6px rgb(40 167 69 / 80%);
    }
  }

  .eventide-effects-card__details {
    text-shadow: 0 0 6px rgb(40 167 69 / 60%);
  }
}

// Harmful effects card variant (moved here for specificity)
.eventide-effects-card--harmful {
  border-color: rgb(220 53 69 / 60%);
  background: linear-gradient(
    135deg,
    rgb(220 53 69 / 15%) 0%,
    rgb(139 0 0 / 80%) 50%,
    rgb(220 53 69 / 10%) 100%
  );
  box-shadow:
    0 0 10px rgb(220 53 69 / 30%),
    inset 0 1px 0 rgb(255 255 255 / 10%);

  &::before {
    background: linear-gradient(
      90deg,
      transparent,
      rgb(220 53 69 / 40%),
      transparent
    );
    animation: harmful-glow 2.5s ease-in-out infinite;
  }

  .eventide-effects-card__icon {
    background: rgb(220 53 69 / 40%);
    border-color: rgb(220 53 69 / 70%);

    i {
      text-shadow: 0 0 6px rgb(220 53 69 / 80%);
    }
  }

  .eventide-effects-card__details {
    text-shadow: 0 0 6px rgb(220 53 69 / 60%);
  }
}

// Deadly cursed card variant (moved here for specificity)
.eventide-cursed-card--deadly {
  border-color: rgb(139 0 0 / 80%);
  background: linear-gradient(
    135deg,
    rgb(139 0 0 / 20%) 0%,
    rgb(75 0 0 / 90%) 50%,
    rgb(139 0 0 / 15%) 100%
  );
  box-shadow:
    0 0 15px rgb(139 0 0 / 40%),
    inset 0 1px 0 rgb(255 255 255 / 10%);

  &::before {
    background: linear-gradient(
      90deg,
      transparent,
      rgb(139 0 0 / 50%),
      transparent
    );
    animation: deadly-glow 3s ease-in-out infinite;
  }

  .eventide-cursed-card__icon {
    background: rgb(139 0 0 / 50%);
    border-color: rgb(139 0 0 / 80%);

    i {
      text-shadow: 0 0 8px rgb(139 0 0 / 90%);
    }
  }

  .eventide-cursed-card__details {
    text-shadow: 0 0 6px rgb(139 0 0 / 70%);
  }
}

// Gear section title i selector (moved here for specificity)
.eventide-actor-data-table__header-cell.gear-section-title i {
  font-size: 15pt !important; // Slightly larger than text but not too big
  opacity: 0.9 !important;
  flex-shrink: 0 !important; // Prevent icon from shrinking
}

// Control button i selector (moved here for specificity)
.eventide-actor-data-control i {
  position: relative !important;
  z-index: 1 !important;
}
