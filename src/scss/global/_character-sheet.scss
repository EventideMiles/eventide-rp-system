@use "../utils/colors" as colors;
@use "../utils/typography" as typography;
@use "../utils/mixins" as mixins;
@use "../utils/tokens" as tokens;
@use "../utils/themes" as themes;

// General selectors (must come before any specific theme selectors for proper specificity)
label,
.form-group label,
.section-header {
  font-family: var(--erps-info-font) !important;
  font-weight: 600 !important;
  letter-spacing: 0.3px !important;
}

.resource-label {
  color: colors.$universal-white;
  text-shadow: 1px 1px 2px rgb(0 0 0 / 80%);
  font-weight: bold;
  font-size: 0.9rem;
}

.resource-value {
  display: inline-block;
  padding: tokens.$spacing-sm;
  background: rgb(0 0 0 / 40%) !important;
  border: 1px solid rgb(255 255 255 / 15%) !important;
  border-radius: tokens.$radius-sm;
  color: colors.$universal-white !important;
  text-shadow: 1px 1px 2px rgb(0 0 0 / 80%);
  font-weight: 500;
  text-align: center;
  min-width: 2rem;
  font-family: monospace;
  font-size: 1rem;
  opacity: 0.9;
  cursor: default;
  user-select: none;
  box-shadow: inset 0 1px 3px rgb(0 0 0 / 30%);

  &:hover {
    opacity: 1;
    background: rgb(0 0 0 / 50%) !important;
  }
}

.eventide-ability-row {
  border-radius: 0.5rem;
  padding: 0.25rem;
  color: colors.$universal-white;
  text-align: center;

  // Also target any children of ability-override (moved before main selector to fix specificity)
  .ability-override * {
    text-shadow: none !important;

    &:hover {
      text-shadow: none !important;
    }
  }

  // Apply hover effect only to direct children that are not inputs or ability-override
  > *:not(input, .ability-override):hover {
    text-shadow: 0 0 0.125rem colors.$white-text-glow, 0 0 0.25rem colors.$white-text-glow, 0 0 0.375rem colors.$white-text-glow;
    color: colors.$universal-white;
  }

  // Ensure ability-override never gets the hover effect
  .ability-override {
    color: colors.$universal-white;
    text-shadow: none !important;

    &:hover {
      text-shadow: none !important;
    }
  }
}

// Make document name flex container
// .document-name {
//   display: flex;
//   align-items: center;

//   input {
//     flex-grow: 1;
//   }
// }

.features {
  overflow-y: auto;
}

.eventide-character-sheet {
  // Font variables for game aesthetic
  --erps-display-font: 'Cinzel', 'Libre Baskerville', serif; // For character names and important displays
  --erps-info-font: 'Crimson Text', 'Times New Roman', serif; // For character information
  --erps-ui-font: 'Roboto Condensed', 'Arial Narrow', sans-serif; // For UI elements
  --erps-mono-font: 'Consolas', 'Monaco', 'Courier New', monospace; // For numerical values

  // Base styling for character sheet container
  border-radius: 16px;
  box-shadow:
    0 0 40px rgb(0 0 0 / 60%),
    inset 0 2px 4px rgb(255 255 255 / 5%),
    inset 0 -2px 4px rgb(0 0 0 / 20%);


  // Apply all background themes using optimized mixins
  @include themes.apply-all-background-themes;

  // Character header styling - now theme-aware
  .eventide-actor__header {
    @include themes.apply-all-themes('header-theme');

    background: linear-gradient(
      135deg,
      var(--theme-accent) 0%,
      var(--theme-primary) 50%,
      var(--theme-secondary) 100%
    );
    border: 2px solid var(--theme-glow);
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 1rem;
    box-shadow:
      0 8px 32px rgb(0 0 0 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 10%);
    position: relative;
    overflow: hidden;

    // Animated background effect
    &::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(
        circle,
        var(--theme-glow) 0%,
        transparent 70%
      );
      animation: header-glow 4s ease-in-out infinite alternate;
      pointer-events: none;
    }

    // Light theme specific overrides
    &[data-header-theme="light"] {
      // Toggle label text for light theme
      .eventide-actor__toggle-group label {
        color: var(--theme-text) !important;

        &:hover {
          color: #0f172a !important; // Even darker on hover
        }
      }
    }

    // Profile image theme backgrounds - applied based on header theme
    .eventide-actor__profile-img {
      border-radius: 40px;
      border: 3px solid colors.$universal-white;
      width: 180px;
      height: 180px;
      box-shadow:
        0 0 20px rgb(255 255 255 / 30%),
        inset 0 0 20px rgb(0 0 0 / 20%);
      transition: all 0.3s ease;
      position: relative;
      flex-shrink: 0;
      object-fit: cover;
      box-sizing: border-box;

      // Add frame effect
      &::before {
        content: '';
        position: absolute;
        inset: -6px;
        border: 1px solid rgb(255 255 255 / 20%);
        border-radius: 46px;
        z-index: -1;
      }

      &:hover {
        border: 3px solid colors.$white-text-glow;
        box-shadow:
          0 0 30px colors.$white-text-glow,
          inset 0 0 20px rgb(0 0 0 / 10%);
        transform: scale(1.02);
      }

      // Disabled state when transformed
      &--disabled {
        opacity: 0.6;
        cursor: not-allowed;
        filter: grayscale(0.3);

        &::after {
          content: '';
          position: absolute;
          inset: 0;
          background: rgb(0 0 0 / 30%);
          border-radius: 40px;
          pointer-events: none;
        }

        &:hover {
          border: 3px solid colors.$universal-white;
          box-shadow:
            0 0 20px rgb(255 255 255 / 30%),
            inset 0 0 20px rgb(0 0 0 / 20%);
          transform: none;
        }
      }
    }

    // Apply themed profile image backgrounds based on header theme
    @include themes.apply-all-profile-image-backgrounds('header-theme');
  }

  // Character name input theme system with multiple color schemes
  .document-name {
    position: relative !important;
    margin-bottom: 1rem !important;

    @include themes.apply-all-themes('name-theme');

    // Add subtle animated element to the left
    &::before {
      content: '' !important;
      position: absolute !important;
      top: 50% !important;
      left: -25px !important;
      width: 20px !important;
      height: 3px !important;
      background: linear-gradient(90deg,
        transparent 0%,
        var(--theme-glow) 30%,
        var(--theme-light) 70%,
        transparent 100%) !important;
      border-radius: 2px !important;
      transform: translateY(-50%) !important;
      animation: name-input-glow 3s ease-in-out infinite !important;
      z-index: 1 !important;
    }

    // Add decorative elements on both sides
    &::after {
      content: '' !important;
      position: absolute !important;
      top: 50% !important;
      right: -25px !important;
      width: 20px !important;
      height: 3px !important;
      background: linear-gradient(90deg,
        transparent 0%,
        var(--theme-light) 30%,
        var(--theme-glow) 70%,
        transparent 100%) !important;
      border-radius: 2px !important;
      transform: translateY(-50%) !important;
      animation: name-input-glow 3s ease-in-out infinite 1.5s !important;
      z-index: 1 !important;
    }
  }

    // Target the specific character name input class
  .eventide-actor__character-name {
    font-family: var(--erps-display-font) !important;
    font-size: 1.8rem !important;
    font-weight: 600 !important;
    letter-spacing: 1px !important;
    text-align: center !important;
    color: var(--theme-text) !important;
    background: var(--theme-accent) !important; // Flat single color background
    border: 2px solid rgb(255 255 255 / 20%) !important; // Subtle border
    border-radius: 8px !important;
    padding: 12px 20px !important;
    width: 100% !important;
    height: auto !important;
    min-height: 3rem !important;
    box-shadow:
      0 2px 8px rgb(0 0 0 / 30%),
      inset 0 1px 0 rgb(255 255 255 / 10%) !important; // Minimal shadow

    text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important; // Simple text shadow
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
    position: relative !important;

    // z-index: 0 !important;

    // Elegant border effect
    &::before {
      content: '' !important;
      position: absolute !important;
      inset: -2px !important;
      background: linear-gradient(45deg,
        var(--theme-primary), var(--theme-light), var(--theme-secondary), var(--theme-light), var(--theme-primary)) !important;
      border-radius: 10px !important;
      z-index: -1 !important;
      opacity: 0 !important;
      transition: opacity 0.3s ease !important;
    }

    &:hover {
      color: #fff !important;
      background:
        var(--theme-pattern),
        linear-gradient(135deg,
          var(--theme-accent) 0%,
          var(--theme-primary) 25%,
          var(--theme-secondary) 50%,
          var(--theme-primary) 75%,
          var(--theme-accent) 100%) !important;
      background-size: 20px 20px, 100% 100% !important;
      background-position: 0 0, 0 0 !important;
      animation: pattern-shift 8s linear infinite !important;
      box-shadow:
        0 0 30px var(--theme-glow),
        inset 0 2px 4px rgb(0 0 0 / 30%),
        inset 0 -2px 4px rgb(255 255 255 / 20%) !important;
      text-shadow:
        0 1px 3px rgb(0 0 0 / 90%),
        0 0 15px var(--theme-light) !important;
      transform: translateY(-1px) !important;

      &::before {
        opacity: 1 !important;
      }
    }

    &:focus {
      outline: none !important;
      color: #fff !important;
      background:
        var(--theme-pattern),
        linear-gradient(135deg,
          var(--theme-accent) 0%,
          var(--theme-primary) 25%,
          var(--theme-secondary) 50%,
          var(--theme-primary) 75%,
          var(--theme-accent) 100%) !important;
      background-size: 20px 20px, 100% 100% !important;
      background-position: 0 0, 0 0 !important;
      animation: pattern-shift 6s linear infinite !important;
      box-shadow:
        0 0 40px var(--theme-glow),
        0 0 20px var(--theme-light),
        inset 0 2px 6px rgb(0 0 0 / 40%),
        inset 0 -2px 6px rgb(255 255 255 / 30%) !important;
      text-shadow:
        0 1px 4px rgb(0 0 0 / 100%),
        0 0 20px var(--theme-light),
        0 0 30px var(--theme-glow) !important;
      transform: translateY(-2px) !important;

      &::before {
        opacity: 1 !important;
      }
    }

    // Placeholder styling
    &::placeholder {
      color: var(--theme-light) !important;
      opacity: 0.7 !important;
      font-style: italic !important;
      text-shadow: 0 1px 2px rgb(0 0 0 / 60%) !important;
    }
  }

  // Animation for the subtle side elements
  @keyframes name-input-glow {
    0%, 100% {
      opacity: 0.3;
      transform: translateY(-50%) scaleX(0.8);
    }

    50% {
      opacity: 0.8;
      transform: translateY(-50%) scaleX(1.2);
    }
  }

  // Blue pulse animation for decorative elements
  @keyframes pulse-blue {
    0%, 100% {
      opacity: 0.6;
      transform: translateY(-50%) scale(1);
    }

    50% {
      opacity: 1;
      transform: translateY(-50%) scale(1.2);
    }
  }

  // Resource boxes with game styling
  .eventide-actor__resource-box {
    background: linear-gradient(
      135deg,
      rgb(25 35 55 / 90%) 0%,
      rgb(35 45 65 / 80%) 100%
    );
    border: 2px solid rgb(77 148 255 / 50%);
    border-radius: 10px;
    padding: 1rem;
    text-align: center;
    position: relative;
    overflow: hidden;
    box-shadow:
      0 4px 16px rgb(0 0 0 / 30%),
      inset 0 1px 0 rgb(255 255 255 / 10%);

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        rgb(77 148 255 / 20%),
        transparent
      );
      transition: left 0.6s ease;
    }

    &:hover::before {
      left: 100%;
    }

    .resource-label {
      font-family: var(--erps-info-font) !important;
      font-size: 0.9rem !important;
      font-weight: 600 !important;
      color: rgb(255 255 255 / 90%) !important;
      text-transform: uppercase !important;
      letter-spacing: 1px !important;
      margin-bottom: 0.5rem !important;
      text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important;
    }

    .resource-value {
      font-family: var(--erps-mono-font) !important;
      font-size: 1.4rem !important;
      font-weight: 700 !important;
      color: #fff !important;
      text-shadow:
        0 2px 4px rgb(0 0 0 / 80%),
        0 0 15px rgb(77 148 255 / 60%) !important;
      margin-bottom: 0.25rem !important;
    }

    input.resource-input {
      font-family: var(--erps-mono-font) !important;
      font-size: 1.2rem !important;
      font-weight: 600 !important;
      color: #fff !important;
      background: rgb(15 25 40 / 80%) !important;
      border: 1px solid rgb(77 148 255 / 40%) !important;
      border-radius: 6px !important;
      padding: 0.5rem !important;
      text-align: center !important;
      text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important;

      &:focus {
        border-color: rgb(77 148 255 / 80%) !important;
        box-shadow:
          0 0 0 2px rgb(77 148 255 / 30%),
          0 0 15px rgb(77 148 255 / 40%) !important;
      }
    }

    .resource-max {
      font-family: var(--erps-mono-font) !important;
      font-size: 1rem !important;
      color: rgb(255 255 255 / 80%) !important;
      text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important;
    }
  }

  // Secondary stats styling
  .eventide-actor__secondary-stats {
    .stat-box {
      background: linear-gradient(
        135deg,
        rgb(20 30 45 / 90%) 0%,
        rgb(30 40 55 / 80%) 100%
      );
      border: 1px solid rgb(77 148 255 / 40%);
      border-radius: 8px;
      padding: 0.75rem;
      text-align: center;

      .stat-label {
        font-family: var(--erps-info-font) !important;
        font-size: 0.8rem !important;
        font-weight: 600 !important;
        color: rgb(255 255 255 / 80%) !important;
        text-transform: uppercase !important;
        letter-spacing: 0.5px !important;
        margin-bottom: 0.25rem !important;
        text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important;
      }

      .stat-value {
        font-family: var(--erps-mono-font) !important;
        font-size: 1.1rem !important;
        font-weight: 700 !important;
        color: #fff !important;
        text-shadow:
          0 1px 3px rgb(0 0 0 / 80%),
          0 0 10px rgb(77 148 255 / 50%) !important;
      }
    }
  }

  // Status bar cards with enhanced typography
  .eventide-header__status-bar {
    .status-card {
      .status-card__title {
        font-family: var(--erps-info-font) !important;
        font-weight: 600 !important;
        letter-spacing: 0.5px !important;
        text-shadow: 0 1px 2px rgb(0 0 0 / 80%) !important;
      }

      .status-card__content {
        font-family: var(--erps-ui-font) !important;
        font-weight: 500 !important;
        text-shadow: 0 1px 2px rgb(0 0 0 / 60%) !important;
      }

      .status-card__value {
        font-family: var(--erps-mono-font) !important;
        font-weight: 700 !important;
        text-shadow: 0 1px 3px rgb(0 0 0 / 80%) !important;
      }
    }
  }

  // Labels and headings styling is now handled at the top of the file

  // Form inputs throughout the sheet
  input[type="text"],
  input[type="number"],
  textarea,
  select {
    font-family: var(--erps-info-font) !important;

    &.monospace,
    &[data-dtype="Number"] {
      font-family: var(--erps-mono-font) !important;
    }
  }
}

.eventide-character-sheet input {
  @include mixins.grid-compliant-text-input;

  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  height: 2rem;
  border: 0.125rem inset colors.$universal-white;
  text-align: center;
  box-sizing: border-box !important;
  padding: 0.25rem !important;
  line-height: 1 !important;
}

.eventide-character-sheet input::selection {
  background: colors.$universal-white;
  color: colors.$universal-black;
}

// Header Ability Cards - Compact design inspired by status cards
.header-abilities {
  gap: 0.25rem;
  padding: 0.25rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%; // Match the height of the header content
}

.eventide-ability-card {
  display: flex;
  flex-direction: row; // Change to horizontal layout
  align-items: center;
  border-radius: 4px;
  border: 2px solid transparent;
  background: linear-gradient(
    135deg,
    rgb(0 0 0 / 30%) 0%,
    rgb(20 30 45 / 40%) 50%,
    rgb(0 0 0 / 30%) 100%
  );
  padding: 0.25rem 0.5rem; // Reduced vertical padding
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  height: 3rem; // Increased height to accommodate 16pt input font
  width: 100%; // Use full column width
  max-width: 100%; // Ensure it doesn't exceed column bounds
  min-width: 0; // Allow shrinking if needed

  // Base styling similar to input sections
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 4px;
    height: 100%;
    z-index: 1;
    transition: all 0.3s ease;
  }

  &__content {
    position: relative;
    z-index: 2;
    display: flex;
    flex-direction: row; // Horizontal layout
    align-items: center;
    width: 100%;
    gap: 0.5rem; // Increased gap for better overall spacing
    justify-content: space-between;
  }

  &__header {
    flex-shrink: 0;
    min-width: 2.5rem; // Reduced for abbreviations
    max-width: 3rem; // Reduced for abbreviations
    width: 3rem; // Reduced for abbreviations
  }

  &__label {
    font-size: 14pt; // Reduced to 14pt for better balance
    font-weight: 600;
    color: rgb(255 255 255 / 80%);
    text-transform: uppercase;
    letter-spacing: 0.3px;
    line-height: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    cursor: help; // Indicate that hover shows more info
    transition: color 0.2s ease;

    &:hover {
      color: rgb(255 255 255 / 100%);
    }
  }

  &__stats {
    display: flex;
    align-items: center;
    gap: 0.5rem; // Increased gap for better spacing
    flex-grow: 1;
  }

  &__input {
    // Force specific sizing for ability card inputs
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    width: 2.25rem !important;
    height: 1.75rem !important;
    min-height: 1.75rem !important;
    max-height: 1.75rem !important;
    padding: 0 !important;
    margin: 0 !important;
    font-size: 16pt !important;
    line-height: 1 !important;
    text-align: center !important;
    background: rgb(0 0 0 / 30%) !important;
    border: 1px solid rgb(255 255 255 / 20%) !important;
    border-radius: 3px !important;
    color: #fff !important;
    flex-shrink: 0 !important;
    box-sizing: border-box !important;
    vertical-align: middle !important;

    // Override any inherited styles
    font-family: inherit !important;
    font-weight: normal !important;
    letter-spacing: normal !important;
    text-transform: none !important;

    &:focus {
      border-color: rgb(255 255 255 / 50%) !important;
      box-shadow: 0 0 4px rgb(255 255 255 / 30%) !important;
      outline: none !important;
    }

    &:hover {
      border-color: rgb(255 255 255 / 40%) !important;
    }
  }

  &__total-button {
    // Force specific sizing for ability card buttons
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    width: 2.25rem !important;
    height: 1.75rem !important;
    min-height: 1.75rem !important;
    max-height: 1.75rem !important;
    min-width: 2.25rem !important;
    max-width: 2.25rem !important;
    padding: 0 !important;
    margin: 0 !important;
    border-radius: 3px !important;
    color: #fff !important;
    cursor: pointer !important;
    transition: all 0.2s ease !important;
    flex-shrink: 0 !important;
    font-size: 16pt !important;
    font-weight: bold !important;
    line-height: 1 !important;
    position: relative !important;
    overflow: hidden !important;
    box-sizing: border-box !important;
    vertical-align: middle !important;

    // Override any inherited button styles
    text-decoration: none !important;
    text-transform: none !important;
    letter-spacing: normal !important;

    // Default styling - will be overridden by ability-specific styles
    background: rgb(255 255 255 / 10%);
    border: 1px solid rgb(255 255 255 / 30%);
    text-shadow: 0 0 4px rgb(255 255 255 / 60%);
    box-shadow:
      0 0 6px rgb(255 255 255 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);

    &:active {
      transform: scale(0.95);
    }

    // Subtle animated background shimmer
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        rgb(255 255 255 / 20%),
        transparent
      );
      animation: button-shimmer 3s ease-in-out infinite;
    }
  }

  // Ability-specific button styling (after main button definition for proper specificity)
  &--acro &__total-button {
    background: rgb(191 68 0 / 30%);
    border: 1px solid rgb(191 68 0 / 50%);
    text-shadow: 0 0 4px rgb(191 68 0 / 80%);
    box-shadow:
      0 0 6px rgb(191 68 0 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
    animation: acro-glow 2s ease-in-out infinite alternate;

    &::before {
      background: linear-gradient(
        90deg,
        transparent,
        rgb(191 68 0 / 30%),
        transparent
      );
    }
  }

  &--phys &__total-button {
    background: rgb(168 3 3 / 30%);
    border: 1px solid rgb(168 3 3 / 50%);
    text-shadow: 0 0 4px rgb(168 3 3 / 80%);
    box-shadow:
      0 0 6px rgb(168 3 3 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
    animation: phys-glow 2s ease-in-out infinite alternate;

    &::before {
      background: linear-gradient(
        90deg,
        transparent,
        rgb(168 3 3 / 30%),
        transparent
      );
    }
  }

  &--fort &__total-button {
    background: rgb(45 104 45 / 30%);
    border: 1px solid rgb(45 104 45 / 50%);
    text-shadow: 0 0 4px rgb(45 104 45 / 80%);
    box-shadow:
      0 0 6px rgb(45 104 45 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
    animation: fort-glow 2s ease-in-out infinite alternate;

    &::before {
      background: linear-gradient(
        90deg,
        transparent,
        rgb(45 104 45 / 30%),
        transparent
      );
    }
  }

  &--will &__total-button {
    background: rgb(106 27 154 / 30%);
    border: 1px solid rgb(106 27 154 / 50%);
    text-shadow: 0 0 4px rgb(106 27 154 / 80%);
    box-shadow:
      0 0 6px rgb(106 27 154 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
    animation: will-glow 2s ease-in-out infinite alternate;

    &::before {
      background: linear-gradient(
        90deg,
        transparent,
        rgb(106 27 154 / 30%),
        transparent
      );
    }
  }

  &--wits &__total-button {
    background: rgb(14 67 128 / 30%);
    border: 1px solid rgb(14 67 128 / 50%);
    text-shadow: 0 0 4px rgb(14 67 128 / 80%);
    box-shadow:
      0 0 6px rgb(14 67 128 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
    animation: wits-glow 2s ease-in-out infinite alternate;

    &::before {
      background: linear-gradient(
        90deg,
        transparent,
        rgb(14 67 128 / 30%),
        transparent
      );
    }
  }

  // Hover states for ability buttons (moved after base definitions)
  &--acro &__total-button:hover {
    background: rgb(191 68 0 / 50%);
    border-color: rgb(191 68 0 / 70%);
    transform: scale(1.05);
    box-shadow:
      0 0 12px rgb(191 68 0 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }

  &--phys &__total-button:hover {
    background: rgb(168 3 3 / 50%);
    border-color: rgb(168 3 3 / 70%);
    transform: scale(1.05);
    box-shadow:
      0 0 12px rgb(168 3 3 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }

  &--fort &__total-button:hover {
    background: rgb(45 104 45 / 50%);
    border-color: rgb(45 104 45 / 70%);
    transform: scale(1.05);
    box-shadow:
      0 0 12px rgb(45 104 45 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }

  &--will &__total-button:hover {
    background: rgb(106 27 154 / 50%);
    border-color: rgb(106 27 154 / 70%);
    transform: scale(1.05);
    box-shadow:
      0 0 12px rgb(106 27 154 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }

  &--wits &__total-button:hover {
    background: rgb(14 67 128 / 50%);
    border-color: rgb(14 67 128 / 70%);
    transform: scale(1.05);
    box-shadow:
      0 0 12px rgb(14 67 128 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }

  &__status {
    // Force specific sizing for ability card status containers
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
    flex-shrink: 0 !important;
    width: 1.75rem !important;
    height: 1.75rem !important;
    min-height: 1.75rem !important;
    max-height: 1.75rem !important;
    min-width: 1.75rem !important;
    max-width: 1.75rem !important;
    padding: 0 !important;
    margin: 0 !important;
    border-radius: 3px !important;
    background: rgb(0 0 0 / 30%) !important;
    border: 1px solid rgb(255 255 255 / 20%) !important;
    transition: all 0.2s ease !important;
    box-sizing: border-box !important;
    vertical-align: middle !important;

    // Override any inherited styles
    position: relative !important;
    overflow: visible !important;

    &:hover {
      background: rgb(0 0 0 / 40%) !important;
      border-color: rgb(255 255 255 / 35%) !important;
    }
  }

  &__lock {
    // Force specific sizing for ability card lock icons
    font-size: 0.9rem !important; // Larger for better visibility in bigger container
    opacity: 0.9 !important;
    transition: all 0.2s ease !important;
    display: inline-block !important;
    line-height: 1 !important;
    vertical-align: middle !important;

    // Override any inherited icon styles
    margin: 0 !important;
    padding: 0 !important;
    text-decoration: none !important;
    text-transform: none !important;
    color: #ff6b6b;
    text-shadow: 0 0 4px rgb(255 107 107 / 60%);

    &:hover {
      opacity: 1 !important;
      transform: scale(1.15) !important;
    }
  }

  &__unlock {
    // Force specific sizing for ability card lock icons
    font-size: 0.9rem !important; // Larger for better visibility in bigger container
    opacity: 0.9 !important;
    transition: all 0.2s ease !important;
    display: inline-block !important;
    line-height: 1 !important;
    vertical-align: middle !important;

    // Override any inherited icon styles
    margin: 0 !important;
    padding: 0 !important;
    text-decoration: none !important;
    text-transform: none !important;
    color: #4CAF50;
    text-shadow: 0 0 4px rgb(76 175 80 / 60%);

    &:hover {
      opacity: 1 !important;
      transform: scale(1.15) !important;
    }
  }

  // Ability-specific styling with left border colors and button theming
  &--acro {
    &::before {
      background: colors.$acro;
    }
  }

  &--phys {
    &::before {
      background: colors.$phys;
    }
  }

  &--fort {
    &::before {
      background: colors.$fort;
    }
  }

  &--will {
    &::before {
      background: colors.$will;
    }
  }

  &--wits {
    &::before {
      background: colors.$wits;
    }
  }

  // Hover effects with themed backgrounds and patterns
  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgb(0 0 0 / 30%);

    &::before {
      width: 100%;
      opacity: 0.15;
    }
  }

  // Specific hover patterns for each ability
  &--acro:hover {
    background: linear-gradient(
      135deg,
      rgb(191 68 0 / 20%) 0%,
      rgb(191 68 0 / 10%) 50%,
      rgb(191 68 0 / 5%) 100%
    );

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23bf4400' fill-opacity='0.1'%3E%3Cpath d='M10 2l2 6h6l-5 4 2 6-5-4-5 4 2-6-5-4h6z'/%3E%3C/g%3E%3C/svg%3E");
      pointer-events: none;
      z-index: 1;
    }
  }

  &--phys:hover {
    background: linear-gradient(
      135deg,
      rgb(168 3 3 / 20%) 0%,
      rgb(168 3 3 / 10%) 50%,
      rgb(168 3 3 / 5%) 100%
    );

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23a80303' fill-opacity='0.1'%3E%3Crect x='8' y='2' width='4' height='16'/%3E%3Crect x='2' y='8' width='16' height='4'/%3E%3C/g%3E%3C/svg%3E");
      pointer-events: none;
      z-index: 1;
    }
  }

  &--fort:hover {
    background: linear-gradient(
      135deg,
      rgb(45 104 45 / 20%) 0%,
      rgb(45 104 45 / 10%) 50%,
      rgb(45 104 45 / 5%) 100%
    );

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%232d682d' fill-opacity='0.1'%3E%3Cpath d='M10 2L4 6v8l6 4 6-4V6z'/%3E%3C/g%3E%3C/svg%3E");
      pointer-events: none;
      z-index: 1;
    }
  }

  &--will:hover {
    background: linear-gradient(
      135deg,
      rgb(106 27 154 / 20%) 0%,
      rgb(106 27 154 / 10%) 50%,
      rgb(106 27 154 / 5%) 100%
    );

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%236a1b9a' fill-opacity='0.1'%3E%3Ccircle cx='10' cy='10' r='8'/%3E%3Ccircle cx='10' cy='10' r='4'/%3E%3C/g%3E%3C/svg%3E");
      pointer-events: none;
      z-index: 1;
    }
  }

  &--wits:hover {
    background: linear-gradient(
      135deg,
      rgb(14 67 128 / 20%) 0%,
      rgb(14 67 128 / 10%) 50%,
      rgb(14 67 128 / 5%) 100%
    );

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%230e4380' fill-opacity='0.1'%3E%3Cpath d='M10 2l8 6-8 2-8-2z'/%3E%3Cpath d='M10 12l8 6-8-2-8 2z'/%3E%3C/g%3E%3C/svg%3E");
      pointer-events: none;
      z-index: 1;
    }
  }
}

// Animations for ability card total buttons - each with their own color
@keyframes acro-glow {
  0% {
    box-shadow:
      0 0 6px rgb(191 68 0 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 10px rgb(191 68 0 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }
}

@keyframes phys-glow {
  0% {
    box-shadow:
      0 0 6px rgb(168 3 3 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 10px rgb(168 3 3 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }
}

@keyframes fort-glow {
  0% {
    box-shadow:
      0 0 6px rgb(45 104 45 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 10px rgb(45 104 45 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }
}

@keyframes will-glow {
  0% {
    box-shadow:
      0 0 6px rgb(106 27 154 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 10px rgb(106 27 154 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }
}

@keyframes wits-glow {
  0% {
    box-shadow:
      0 0 6px rgb(14 67 128 / 40%),
      inset 0 1px 0 rgb(255 255 255 / 20%);
  }

  100% {
    box-shadow:
      0 0 10px rgb(14 67 128 / 60%),
      inset 0 1px 0 rgb(255 255 255 / 30%);
  }
}

@keyframes button-shimmer {
  0% {
    left: -100%;
  }

  50% {
    left: 100%;
  }

  100% {
    left: 100%;
  }
}

// Fix for controls dropdown z-index issues
.controls-dropdown {
  z-index: 9999 !important;
}

.eventide-ability-acro-box {
  background-color: colors.$acro-transparent;
  border-left: 0.3125rem solid colors.$acro;
}

.eventide-ability-phys-box {
  background-color: colors.$phys-transparent;
  border-left: 0.3125rem solid colors.$phys;
}

.eventide-ability-fort-box {
  background-color: colors.$fort-transparent;
  border-left: 0.3125rem solid colors.$fort;
}

.eventide-ability-will-box {
  background-color: colors.$will-transparent;
  border-left: 0.3125rem solid colors.$will;
}

.eventide-ability-wits-box {
  background-color: colors.$wits-transparent;
  border-left: 0.3125rem solid colors.$wits;
}

// Complete toggle group implementation for actor header: can be used anywhere on the actor sheet
.eventide-actor__toggle-group {
  @include mixins.grid-compliant-toggle-group;

  // Override default margins for header usage
  margin: 0.5rem 0; // MAGICNUMBER replace with token eventually

  // Label styling is now handled at the top of the file

  // Alternative: target any label with the class
  label.eventide-actor__toggle-label {
    font-size: 0.8rem !important;
  }

  // Style the toggle switch wrapper
  .toggle-switch-wrapper {
    position: relative;

    // Style the actual toggle input
    input[type="checkbox"] {
      @include mixins.grid-compliant-toggle-switch;
    }

    // Style the toggle display element
    .toggle-switch-display {
      cursor: pointer;

      &:hover {
        opacity: 0.9;
      }
    }
  }

  // Variant for compact header usage
  &--compact {
    margin: 0.25rem 0;
    padding: 0.25rem 0.5rem;

    // Label styling is now handled at the top of the file

    .toggle-switch-wrapper {
      width: 2rem;
      flex: 0 0 2rem;
    }
  }

  // Variant for inline usage in headers
  &--inline {
    margin: 0;
    padding: 0;

    // Label styling is now handled at the top of the file
  }
}

// Enhanced header styling for game design feel
.sheet-header--actor {
  background: linear-gradient(
    135deg,
    rgb(20 30 45 / 95%) 0%,
    rgb(30 40 60 / 90%) 50%,
    rgb(25 35 50 / 95%) 100%
  );
  border: 2px solid colors.$universal-white;
  border-radius: 12px;
  box-shadow:
    0 4px 20px rgb(0 0 0 / 60%),
    inset 0 1px 0 rgb(255 255 255 / 10%);
  padding: 1rem;
  margin-bottom: 0.5rem;
  position: relative;

  // Add subtle animated glow
  &::before {
    content: '';
    position: absolute;
    inset: -2px;
    background: linear-gradient(45deg,
      colors.$universal-white,
      colors.$white-text-glow,
      colors.$universal-white
    );
    border-radius: 14px;
    z-index: -1;
    opacity: 0.3;
    animation: header-glow 3s ease-in-out infinite alternate;
  }

  // Tighten up the main grid
  .grid {
    gap: 0.75rem;
    align-items: flex-start;
    margin-bottom: 0;
  }

  // Ensure header fields align properly
  .header-fields {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    height: 100%;
    justify-content: space-between;
  }

  // Align the left column content
  .grid-span-2 {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    height: 100%;
  }
}

// Enhanced resource boxes with game design
.resource {
  background: linear-gradient(
    135deg,
    rgb(30 40 60 / 80%) 0%,
    rgb(20 30 45 / 90%) 100%
  );
  border: 1px solid rgb(255 255 255 / 30%);
  border-radius: 8px;
  box-shadow:
    0 2px 8px rgb(0 0 0 / 40%),
    inset 0 1px 0 rgb(255 255 255 / 10%);
  transition: all 0.2s ease;

  &:hover {
    border-color: colors.$white-text-glow;
    box-shadow:
      0 4px 12px rgb(0 0 0 / 50%),
      0 0 8px rgb(255 255 255 / 20%);
  }

  // Resource label and value styling is now handled at the top of the file

  input {
    background: rgb(0 0 0 / 30%) !important;
    border: 1px solid rgb(255 255 255 / 20%) !important;
    color: colors.$universal-white !important;
    text-shadow: 1px 1px 2px rgb(0 0 0 / 80%);

    &:focus {
      border-color: colors.$white-text-glow !important;
      box-shadow: 0 0 8px rgb(255 255 255 / 30%) !important;
    }
  }
}

// Tighten up resource grids
.resources {
  margin-bottom: 0;

  &.grid {
    gap: 0.75rem;
  }
}

// ===================================
// HIGH SPECIFICITY SELECTORS
// ===================================
// These selectors are placed at the end to resolve specificity conflicts

// Control button i selector (moved here for specificity)
.eventide-actor-data-control i {
  position: relative !important;
  z-index: 1 !important;
}
